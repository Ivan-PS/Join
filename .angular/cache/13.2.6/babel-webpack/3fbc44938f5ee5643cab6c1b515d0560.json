{"ast":null,"code":"import _asyncToGenerator from \"/home/ivan/HACKUPC2022/Join/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { r as registerInstance, d as createEvent, c as getIonMode, h, H as Host, e as getElement } from './core-feeeff0d.js';\nimport './config-3c7f3790.js';\nimport { c as clamp, f as findItemLabel, a as renderHiddenInput } from './helpers-46f4a262.js';\nimport { c as createAnimation } from './animation-af478fe9.js';\nimport { p as pickerController, d as prepareOverlay, e as present, f as dismiss, g as eventMethod, s as safeCall } from './overlays-10640d86.js';\nimport { h as hostContext, g as getClassMap } from './theme-18cbe2cc.js';\nimport { b as hapticSelectionChanged } from './haptic-c8f1473e.js';\n/**\r\n * Gets a date value given a format\r\n * Defaults to the current date if\r\n * no date given\r\n */\n\nconst getDateValue = (date, format) => {\n  const getValue = getValueFromFormat(date, format);\n\n  if (getValue !== undefined) {\n    if (format === FORMAT_A || format === FORMAT_a) {\n      date.ampm = getValue;\n    }\n\n    return getValue;\n  }\n\n  const defaultDate = parseDate(new Date().toISOString());\n  return getValueFromFormat(defaultDate, format);\n};\n\nconst renderDatetime = (template, value, locale) => {\n  if (value === undefined) {\n    return undefined;\n  }\n\n  const tokens = [];\n  let hasText = false;\n  FORMAT_KEYS.forEach((format, index) => {\n    if (template.indexOf(format.f) > -1) {\n      const token = '{' + index + '}';\n      const text = renderTextFormat(format.f, value[format.k], value, locale);\n\n      if (!hasText && text !== undefined && value[format.k] != null) {\n        hasText = true;\n      }\n\n      tokens.push(token, text || '');\n      template = template.replace(format.f, token);\n    }\n  });\n\n  if (!hasText) {\n    return undefined;\n  }\n\n  for (let i = 0; i < tokens.length; i += 2) {\n    template = template.replace(tokens[i], tokens[i + 1]);\n  }\n\n  return template;\n};\n\nconst renderTextFormat = (format, value, date, locale) => {\n  if (format === FORMAT_DDDD || format === FORMAT_DDD) {\n    try {\n      value = new Date(date.year, date.month - 1, date.day).getDay();\n\n      if (format === FORMAT_DDDD) {\n        return (locale.dayNames ? locale.dayNames : DAY_NAMES)[value];\n      }\n\n      return (locale.dayShortNames ? locale.dayShortNames : DAY_SHORT_NAMES)[value];\n    } catch (e) {// ignore\n    }\n\n    return undefined;\n  }\n\n  if (format === FORMAT_A) {\n    return date !== undefined && date.hour !== undefined ? date.hour < 12 ? 'AM' : 'PM' : value ? value.toUpperCase() : '';\n  }\n\n  if (format === FORMAT_a) {\n    return date !== undefined && date.hour !== undefined ? date.hour < 12 ? 'am' : 'pm' : value || '';\n  }\n\n  if (value == null) {\n    return '';\n  }\n\n  if (format === FORMAT_YY || format === FORMAT_MM || format === FORMAT_DD || format === FORMAT_HH || format === FORMAT_mm || format === FORMAT_ss) {\n    return twoDigit(value);\n  }\n\n  if (format === FORMAT_YYYY) {\n    return fourDigit(value);\n  }\n\n  if (format === FORMAT_MMMM) {\n    return (locale.monthNames ? locale.monthNames : MONTH_NAMES)[value - 1];\n  }\n\n  if (format === FORMAT_MMM) {\n    return (locale.monthShortNames ? locale.monthShortNames : MONTH_SHORT_NAMES)[value - 1];\n  }\n\n  if (format === FORMAT_hh || format === FORMAT_h) {\n    if (value === 0) {\n      return '12';\n    }\n\n    if (value > 12) {\n      value -= 12;\n    }\n\n    if (format === FORMAT_hh && value < 10) {\n      return '0' + value;\n    }\n  }\n\n  return value.toString();\n};\n\nconst dateValueRange = (format, min, max) => {\n  const opts = [];\n\n  if (format === FORMAT_YYYY || format === FORMAT_YY) {\n    // year\n    if (max.year === undefined || min.year === undefined) {\n      throw new Error('min and max year is undefined');\n    }\n\n    for (let i = max.year; i >= min.year; i--) {\n      opts.push(i);\n    }\n  } else if (format === FORMAT_MMMM || format === FORMAT_MMM || format === FORMAT_MM || format === FORMAT_M || format === FORMAT_hh || format === FORMAT_h) {\n    // month or 12-hour\n    for (let i = 1; i < 13; i++) {\n      opts.push(i);\n    }\n  } else if (format === FORMAT_DDDD || format === FORMAT_DDD || format === FORMAT_DD || format === FORMAT_D) {\n    // day\n    for (let i = 1; i < 32; i++) {\n      opts.push(i);\n    }\n  } else if (format === FORMAT_HH || format === FORMAT_H) {\n    // 24-hour\n    for (let i = 0; i < 24; i++) {\n      opts.push(i);\n    }\n  } else if (format === FORMAT_mm || format === FORMAT_m) {\n    // minutes\n    for (let i = 0; i < 60; i++) {\n      opts.push(i);\n    }\n  } else if (format === FORMAT_ss || format === FORMAT_s) {\n    // seconds\n    for (let i = 0; i < 60; i++) {\n      opts.push(i);\n    }\n  } else if (format === FORMAT_A || format === FORMAT_a) {\n    // AM/PM\n    opts.push('am', 'pm');\n  }\n\n  return opts;\n};\n\nconst dateSortValue = (year, month, day, hour = 0, minute = 0) => {\n  return parseInt(`1${fourDigit(year)}${twoDigit(month)}${twoDigit(day)}${twoDigit(hour)}${twoDigit(minute)}`, 10);\n};\n\nconst dateDataSortValue = data => {\n  return dateSortValue(data.year, data.month, data.day, data.hour, data.minute);\n};\n\nconst daysInMonth = (month, year) => {\n  return month === 4 || month === 6 || month === 9 || month === 11 ? 30 : month === 2 ? isLeapYear(year) ? 29 : 28 : 31;\n};\n\nconst isLeapYear = year => {\n  return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n};\n\nconst ISO_8601_REGEXP = /^(\\d{4}|[+\\-]\\d{6})(?:-(\\d{2})(?:-(\\d{2}))?)?(?:T(\\d{2}):(\\d{2})(?::(\\d{2})(?:\\.(\\d{3}))?)?(?:(Z)|([+\\-])(\\d{2})(?::(\\d{2}))?)?)?$/;\nconst TIME_REGEXP = /^((\\d{2}):(\\d{2})(?::(\\d{2})(?:\\.(\\d{3}))?)?(?:(Z)|([+\\-])(\\d{2})(?::(\\d{2}))?)?)?$/;\n\nconst parseDate = val => {\n  // manually parse IS0 cuz Date.parse cannot be trusted\n  // ISO 8601 format: 1994-12-15T13:47:20Z\n  let parse = null;\n\n  if (val != null && val !== '') {\n    // try parsing for just time first, HH:MM\n    parse = TIME_REGEXP.exec(val);\n\n    if (parse) {\n      // adjust the array so it fits nicely with the datetime parse\n      parse.unshift(undefined, undefined);\n      parse[2] = parse[3] = undefined;\n    } else {\n      // try parsing for full ISO datetime\n      parse = ISO_8601_REGEXP.exec(val);\n    }\n  }\n\n  if (parse === null) {\n    // wasn't able to parse the ISO datetime\n    return undefined;\n  } // ensure all the parse values exist with at least 0\n\n\n  for (let i = 1; i < 8; i++) {\n    parse[i] = parse[i] !== undefined ? parseInt(parse[i], 10) : undefined;\n  }\n\n  let tzOffset = 0;\n\n  if (parse[9] && parse[10]) {\n    // hours\n    tzOffset = parseInt(parse[10], 10) * 60;\n\n    if (parse[11]) {\n      // minutes\n      tzOffset += parseInt(parse[11], 10);\n    }\n\n    if (parse[9] === '-') {\n      // + or -\n      tzOffset *= -1;\n    }\n  }\n\n  return {\n    year: parse[1],\n    month: parse[2],\n    day: parse[3],\n    hour: parse[4],\n    minute: parse[5],\n    second: parse[6],\n    millisecond: parse[7],\n    tzOffset\n  };\n};\n/**\r\n * Converts a valid UTC datetime string\r\n * To the user's local timezone\r\n * Note: This is not meant for time strings\r\n * such as \"01:47\"\r\n */\n\n\nconst getLocalDateTime = (dateString = '') => {\n  /**\r\n   * If user passed in undefined\r\n   * or null, convert it to the\r\n   * empty string since the rest\r\n   * of this functions expects\r\n   * a string\r\n   */\n  if (dateString === undefined || dateString === null) {\n    dateString = '';\n  }\n  /**\r\n   * Ensures that YYYY-MM-DD, YYYY-MM,\r\n   * YYYY-DD, etc does not get affected\r\n   * by timezones and stays on the day/month\r\n   * that the user provided\r\n   */\n\n\n  if (dateString.length === 10 || dateString.length === 7) {\n    dateString += ' ';\n  }\n\n  const date = typeof dateString === 'string' && dateString.length > 0 ? new Date(dateString) : new Date();\n  return new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n};\n\nconst updateDate = (existingData, newData) => {\n  if (!newData || typeof newData === 'string') {\n    const localDateTime = getLocalDateTime(newData);\n\n    if (!Number.isNaN(localDateTime.getTime())) {\n      newData = localDateTime.toISOString();\n    }\n  }\n\n  if (newData && newData !== '') {\n    if (typeof newData === 'string') {\n      // new date is a string, and hopefully in the ISO format\n      // convert it to our DatetimeData if a valid ISO\n      newData = parseDate(newData);\n\n      if (newData) {\n        // successfully parsed the ISO string to our DatetimeData\n        Object.assign(existingData, newData);\n        return true;\n      }\n    } else if (newData.year || newData.hour || newData.month || newData.day || newData.minute || newData.second) {\n      // newData is from the datetime picker's selected values\n      // update the existing datetimeValue with the new values\n      if (newData.ampm !== undefined && newData.hour !== undefined) {\n        // change the value of the hour based on whether or not it is am or pm\n        // if the meridiem is pm and equal to 12, it remains 12\n        // otherwise we add 12 to the hour value\n        // if the meridiem is am and equal to 12, we change it to 0\n        // otherwise we use its current hour value\n        // for example: 8 pm becomes 20, 12 am becomes 0, 4 am becomes 4\n        newData.hour.value = newData.ampm.value === 'pm' ? newData.hour.value === 12 ? 12 : newData.hour.value + 12 : newData.hour.value === 12 ? 0 : newData.hour.value;\n      } // merge new values from the picker's selection\n      // to the existing DatetimeData values\n\n\n      for (const key of Object.keys(newData)) {\n        existingData[key] = newData[key].value;\n      }\n\n      return true;\n    } else if (newData.ampm) {\n      // Even though in the picker column hour values are between 1 and 12, the hour value is actually normalized\n      // to [0, 23] interval. Because of this when changing between AM and PM we have to update the hour so it points\n      // to the correct HH hour\n      newData.hour = {\n        value: newData.hour ? newData.hour.value : newData.ampm.value === 'pm' ? existingData.hour < 12 ? existingData.hour + 12 : existingData.hour : existingData.hour >= 12 ? existingData.hour - 12 : existingData.hour\n      };\n      existingData['hour'] = newData['hour'].value;\n      existingData['ampm'] = newData['ampm'].value;\n      return true;\n    } // eww, invalid data\n\n\n    console.warn(`Error parsing date: \"${newData}\". Please provide a valid ISO 8601 datetime format: https://www.w3.org/TR/NOTE-datetime`);\n  } else {\n    // blank data, clear everything out\n    for (const k in existingData) {\n      if (existingData.hasOwnProperty(k)) {\n        delete existingData[k];\n      }\n    }\n  }\n\n  return false;\n};\n\nconst parseTemplate = template => {\n  const formats = [];\n  template = template.replace(/[^\\w\\s]/gi, ' ');\n  FORMAT_KEYS.forEach(format => {\n    if (format.f.length > 1 && template.indexOf(format.f) > -1 && template.indexOf(format.f + format.f.charAt(0)) < 0) {\n      template = template.replace(format.f, ' ' + format.f + ' ');\n    }\n  });\n  const words = template.split(' ').filter(w => w.length > 0);\n  words.forEach((word, i) => {\n    FORMAT_KEYS.forEach(format => {\n      if (word === format.f) {\n        if (word === FORMAT_A || word === FORMAT_a) {\n          // this format is an am/pm format, so it's an \"a\" or \"A\"\n          if (formats.indexOf(FORMAT_h) < 0 && formats.indexOf(FORMAT_hh) < 0 || VALID_AMPM_PREFIX.indexOf(words[i - 1]) === -1) {\n            // template does not already have a 12-hour format\n            // or this am/pm format doesn't have a hour, minute, or second format immediately before it\n            // so do not treat this word \"a\" or \"A\" as the am/pm format\n            return;\n          }\n        }\n\n        formats.push(word);\n      }\n    });\n  });\n  return formats;\n};\n\nconst getValueFromFormat = (date, format) => {\n  if (format === FORMAT_A || format === FORMAT_a) {\n    return date.hour < 12 ? 'am' : 'pm';\n  }\n\n  if (format === FORMAT_hh || format === FORMAT_h) {\n    return date.hour > 12 ? date.hour - 12 : date.hour === 0 ? 12 : date.hour;\n  }\n\n  return date[convertFormatToKey(format)];\n};\n\nconst convertFormatToKey = format => {\n  for (const k in FORMAT_KEYS) {\n    if (FORMAT_KEYS[k].f === format) {\n      return FORMAT_KEYS[k].k;\n    }\n  }\n\n  return undefined;\n};\n\nconst convertDataToISO = data => {\n  // https://www.w3.org/TR/NOTE-datetime\n  let rtn = '';\n\n  if (data.year !== undefined) {\n    // YYYY\n    rtn = fourDigit(data.year);\n\n    if (data.month !== undefined) {\n      // YYYY-MM\n      rtn += '-' + twoDigit(data.month);\n\n      if (data.day !== undefined) {\n        // YYYY-MM-DD\n        rtn += '-' + twoDigit(data.day);\n\n        if (data.hour !== undefined) {\n          // YYYY-MM-DDTHH:mm:SS\n          rtn += `T${twoDigit(data.hour)}:${twoDigit(data.minute)}:${twoDigit(data.second)}`;\n\n          if (data.millisecond > 0) {\n            // YYYY-MM-DDTHH:mm:SS.SSS\n            rtn += '.' + threeDigit(data.millisecond);\n          }\n\n          if (data.tzOffset === undefined) {\n            // YYYY-MM-DDTHH:mm:SSZ\n            rtn += 'Z';\n          } else {\n            // YYYY-MM-DDTHH:mm:SS+/-HH:mm\n            rtn += (data.tzOffset > 0 ? '+' : '-') + twoDigit(Math.floor(Math.abs(data.tzOffset / 60))) + ':' + twoDigit(data.tzOffset % 60);\n          }\n        }\n      }\n    }\n  } else if (data.hour !== undefined) {\n    // HH:mm\n    rtn = twoDigit(data.hour) + ':' + twoDigit(data.minute);\n\n    if (data.second !== undefined) {\n      // HH:mm:SS\n      rtn += ':' + twoDigit(data.second);\n\n      if (data.millisecond !== undefined) {\n        // HH:mm:SS.SSS\n        rtn += '.' + threeDigit(data.millisecond);\n      }\n    }\n  }\n\n  return rtn;\n};\n/**\r\n * Use to convert a string of comma separated strings or\r\n * an array of strings, and clean up any user input\r\n */\n\n\nconst convertToArrayOfStrings = (input, type) => {\n  if (input == null) {\n    return undefined;\n  }\n\n  if (typeof input === 'string') {\n    // convert the string to an array of strings\n    // auto remove any [] characters\n    input = input.replace(/\\[|\\]/g, '').split(',');\n  }\n\n  let values;\n\n  if (Array.isArray(input)) {\n    // trim up each string value\n    values = input.map(val => val.toString().trim());\n  }\n\n  if (values === undefined || values.length === 0) {\n    console.warn(`Invalid \"${type}Names\". Must be an array of strings, or a comma separated string.`);\n  }\n\n  return values;\n};\n/**\r\n * Use to convert a string of comma separated numbers or\r\n * an array of numbers, and clean up any user input\r\n */\n\n\nconst convertToArrayOfNumbers = (input, type) => {\n  if (typeof input === 'string') {\n    // convert the string to an array of strings\n    // auto remove any whitespace and [] characters\n    input = input.replace(/\\[|\\]|\\s/g, '').split(',');\n  }\n\n  let values;\n\n  if (Array.isArray(input)) {\n    // ensure each value is an actual number in the returned array\n    values = input.map(num => parseInt(num, 10)).filter(isFinite);\n  } else {\n    values = [input];\n  }\n\n  if (values.length === 0) {\n    console.warn(`Invalid \"${type}Values\". Must be an array of numbers, or a comma separated string of numbers.`);\n  }\n\n  return values;\n};\n\nconst twoDigit = val => {\n  return ('0' + (val !== undefined ? Math.abs(val) : '0')).slice(-2);\n};\n\nconst threeDigit = val => {\n  return ('00' + (val !== undefined ? Math.abs(val) : '0')).slice(-3);\n};\n\nconst fourDigit = val => {\n  return ('000' + (val !== undefined ? Math.abs(val) : '0')).slice(-4);\n};\n\nconst FORMAT_YYYY = 'YYYY';\nconst FORMAT_YY = 'YY';\nconst FORMAT_MMMM = 'MMMM';\nconst FORMAT_MMM = 'MMM';\nconst FORMAT_MM = 'MM';\nconst FORMAT_M = 'M';\nconst FORMAT_DDDD = 'DDDD';\nconst FORMAT_DDD = 'DDD';\nconst FORMAT_DD = 'DD';\nconst FORMAT_D = 'D';\nconst FORMAT_HH = 'HH';\nconst FORMAT_H = 'H';\nconst FORMAT_hh = 'hh';\nconst FORMAT_h = 'h';\nconst FORMAT_mm = 'mm';\nconst FORMAT_m = 'm';\nconst FORMAT_ss = 'ss';\nconst FORMAT_s = 's';\nconst FORMAT_A = 'A';\nconst FORMAT_a = 'a';\nconst FORMAT_KEYS = [{\n  f: FORMAT_YYYY,\n  k: 'year'\n}, {\n  f: FORMAT_MMMM,\n  k: 'month'\n}, {\n  f: FORMAT_DDDD,\n  k: 'day'\n}, {\n  f: FORMAT_MMM,\n  k: 'month'\n}, {\n  f: FORMAT_DDD,\n  k: 'day'\n}, {\n  f: FORMAT_YY,\n  k: 'year'\n}, {\n  f: FORMAT_MM,\n  k: 'month'\n}, {\n  f: FORMAT_DD,\n  k: 'day'\n}, {\n  f: FORMAT_HH,\n  k: 'hour'\n}, {\n  f: FORMAT_hh,\n  k: 'hour'\n}, {\n  f: FORMAT_mm,\n  k: 'minute'\n}, {\n  f: FORMAT_ss,\n  k: 'second'\n}, {\n  f: FORMAT_M,\n  k: 'month'\n}, {\n  f: FORMAT_D,\n  k: 'day'\n}, {\n  f: FORMAT_H,\n  k: 'hour'\n}, {\n  f: FORMAT_h,\n  k: 'hour'\n}, {\n  f: FORMAT_m,\n  k: 'minute'\n}, {\n  f: FORMAT_s,\n  k: 'second'\n}, {\n  f: FORMAT_A,\n  k: 'ampm'\n}, {\n  f: FORMAT_a,\n  k: 'ampm'\n}];\nconst DAY_NAMES = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\nconst DAY_SHORT_NAMES = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\nconst MONTH_NAMES = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\nconst MONTH_SHORT_NAMES = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\nconst VALID_AMPM_PREFIX = [FORMAT_hh, FORMAT_h, FORMAT_mm, FORMAT_m, FORMAT_ss, FORMAT_s];\nconst Datetime = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.inputId = `ion-dt-${datetimeIds++}`;\n    this.locale = {};\n    this.datetimeMin = {};\n    this.datetimeMax = {};\n    this.datetimeValue = {};\n    this.isExpanded = false;\n    /**\n     * The name of the control, which is submitted with the form data.\n     */\n\n    this.name = this.inputId;\n    /**\n     * If `true`, the user cannot interact with the datetime.\n     */\n\n    this.disabled = false;\n    /**\n     * If `true`, the datetime appears normal but is not interactive.\n     */\n\n    this.readonly = false;\n    /**\n     * The display format of the date and time as text that shows\n     * within the item. When the `pickerFormat` input is not used, then the\n     * `displayFormat` is used for both display the formatted text, and determining\n     * the datetime picker's columns. See the `pickerFormat` input description for\n     * more info. Defaults to `MMM D, YYYY`.\n     */\n\n    this.displayFormat = 'MMM D, YYYY';\n    /**\n     * The text to display on the picker's cancel button.\n     */\n\n    this.cancelText = 'Cancel';\n    /**\n     * The text to display on the picker's \"Done\" button.\n     */\n\n    this.doneText = 'Done';\n\n    this.onClick = () => {\n      this.setFocus();\n      this.open();\n    };\n\n    this.onFocus = () => {\n      this.ionFocus.emit();\n    };\n\n    this.onBlur = () => {\n      this.ionBlur.emit();\n    };\n\n    this.ionCancel = createEvent(this, \"ionCancel\", 7);\n    this.ionChange = createEvent(this, \"ionChange\", 7);\n    this.ionFocus = createEvent(this, \"ionFocus\", 7);\n    this.ionBlur = createEvent(this, \"ionBlur\", 7);\n    this.ionStyle = createEvent(this, \"ionStyle\", 7);\n  }\n\n  disabledChanged() {\n    this.emitStyle();\n  }\n  /**\n   * Update the datetime value when the value changes\n   */\n\n\n  valueChanged() {\n    this.updateDatetimeValue(this.value);\n    this.emitStyle();\n    this.ionChange.emit({\n      value: this.value\n    });\n  }\n\n  componentWillLoad() {\n    // first see if locale names were provided in the inputs\n    // then check to see if they're in the config\n    // if neither were provided then it will use default English names\n    this.locale = {\n      // this.locale[type] = convertToArrayOfStrings((this[type] ? this[type] : this.config.get(type), type);\n      monthNames: convertToArrayOfStrings(this.monthNames, 'monthNames'),\n      monthShortNames: convertToArrayOfStrings(this.monthShortNames, 'monthShortNames'),\n      dayNames: convertToArrayOfStrings(this.dayNames, 'dayNames'),\n      dayShortNames: convertToArrayOfStrings(this.dayShortNames, 'dayShortNames')\n    };\n    this.updateDatetimeValue(this.value);\n    this.emitStyle();\n  }\n  /**\n   * Opens the datetime overlay.\n   */\n\n\n  open() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this.disabled || _this.isExpanded) {\n        return;\n      }\n\n      const pickerOptions = _this.generatePickerOptions();\n\n      const picker = yield pickerController.create(pickerOptions);\n      _this.isExpanded = true;\n      picker.onDidDismiss().then(() => {\n        _this.isExpanded = false;\n\n        _this.setFocus();\n      });\n      picker.addEventListener('ionPickerColChange', /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(function* (event) {\n          const data = event.detail;\n          const colSelectedIndex = data.selectedIndex;\n          const colOptions = data.options;\n          const changeData = {};\n          changeData[data.name] = {\n            value: colOptions[colSelectedIndex].value\n          };\n\n          if (data.name !== 'ampm' && _this.datetimeValue.ampm !== undefined) {\n            changeData['ampm'] = {\n              value: _this.datetimeValue.ampm\n            };\n          }\n\n          _this.updateDatetimeValue(changeData);\n\n          picker.columns = _this.generateColumns();\n        });\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n      yield picker.present();\n    })();\n  }\n\n  emitStyle() {\n    this.ionStyle.emit({\n      'interactive': true,\n      'datetime': true,\n      'has-placeholder': this.placeholder != null,\n      'has-value': this.hasValue(),\n      'interactive-disabled': this.disabled\n    });\n  }\n\n  updateDatetimeValue(value) {\n    updateDate(this.datetimeValue, value);\n  }\n\n  generatePickerOptions() {\n    const mode = getIonMode(this);\n    const pickerOptions = Object.assign(Object.assign({\n      mode\n    }, this.pickerOptions), {\n      columns: this.generateColumns()\n    }); // If the user has not passed in picker buttons,\n    // add a cancel and ok button to the picker\n\n    const buttons = pickerOptions.buttons;\n\n    if (!buttons || buttons.length === 0) {\n      pickerOptions.buttons = [{\n        text: this.cancelText,\n        role: 'cancel',\n        handler: () => {\n          this.updateDatetimeValue(this.value);\n          this.ionCancel.emit();\n        }\n      }, {\n        text: this.doneText,\n        handler: data => {\n          this.updateDatetimeValue(data);\n          /**\n           * Prevent convertDataToISO from doing any\n           * kind of transformation based on timezone\n           * This cancels out any change it attempts to make\n           *\n           * Important: Take the timezone offset based on\n           * the date that is currently selected, otherwise\n           * there can be 1 hr difference when dealing w/ DST\n           */\n\n          const date = new Date(convertDataToISO(this.datetimeValue));\n          this.datetimeValue.tzOffset = date.getTimezoneOffset() * -1;\n          this.value = convertDataToISO(this.datetimeValue);\n        }\n      }];\n    }\n\n    return pickerOptions;\n  }\n\n  generateColumns() {\n    // if a picker format wasn't provided, then fallback\n    // to use the display format\n    let template = this.pickerFormat || this.displayFormat || DEFAULT_FORMAT;\n\n    if (template.length === 0) {\n      return [];\n    } // make sure we've got up to date sizing information\n\n\n    this.calcMinMax(); // does not support selecting by day name\n    // automatically remove any day name formats\n\n    template = template.replace('DDDD', '{~}').replace('DDD', '{~}');\n\n    if (template.indexOf('D') === -1) {\n      // there is not a day in the template\n      // replace the day name with a numeric one if it exists\n      template = template.replace('{~}', 'D');\n    } // make sure no day name replacer is left in the string\n\n\n    template = template.replace(/{~}/g, ''); // parse apart the given template into an array of \"formats\"\n\n    const columns = parseTemplate(template).map(format => {\n      // loop through each format in the template\n      // create a new picker column to build up with data\n      const key = convertFormatToKey(format);\n      let values; // check if they have exact values to use for this date part\n      // otherwise use the default date part values\n\n      const self = this;\n      values = self[key + 'Values'] ? convertToArrayOfNumbers(self[key + 'Values'], key) : dateValueRange(format, this.datetimeMin, this.datetimeMax);\n      const colOptions = values.map(val => {\n        return {\n          value: val,\n          text: renderTextFormat(format, val, undefined, this.locale)\n        };\n      }); // cool, we've loaded up the columns with options\n      // preselect the option for this column\n\n      const optValue = getDateValue(this.datetimeValue, format);\n      const selectedIndex = colOptions.findIndex(opt => opt.value === optValue);\n      return {\n        name: key,\n        selectedIndex: selectedIndex >= 0 ? selectedIndex : 0,\n        options: colOptions\n      };\n    }); // Normalize min/max\n\n    const min = this.datetimeMin;\n    const max = this.datetimeMax;\n    ['month', 'day', 'hour', 'minute'].filter(name => !columns.find(column => column.name === name)).forEach(name => {\n      min[name] = 0;\n      max[name] = 0;\n    });\n    return this.validateColumns(divyColumns(columns));\n  }\n\n  validateColumns(columns) {\n    const today = new Date();\n    const minCompareVal = dateDataSortValue(this.datetimeMin);\n    const maxCompareVal = dateDataSortValue(this.datetimeMax);\n    const yearCol = columns.find(c => c.name === 'year');\n    let selectedYear = today.getFullYear();\n\n    if (yearCol) {\n      // default to the first value if the current year doesn't exist in the options\n      if (!yearCol.options.find(col => col.value === today.getFullYear())) {\n        selectedYear = yearCol.options[0].value;\n      }\n\n      const selectedIndex = yearCol.selectedIndex;\n\n      if (selectedIndex !== undefined) {\n        const yearOpt = yearCol.options[selectedIndex];\n\n        if (yearOpt) {\n          // they have a selected year value\n          selectedYear = yearOpt.value;\n        }\n      }\n    }\n\n    const selectedMonth = this.validateColumn(columns, 'month', 1, minCompareVal, maxCompareVal, [selectedYear, 0, 0, 0, 0], [selectedYear, 12, 31, 23, 59]);\n    const numDaysInMonth = daysInMonth(selectedMonth, selectedYear);\n    const selectedDay = this.validateColumn(columns, 'day', 2, minCompareVal, maxCompareVal, [selectedYear, selectedMonth, 0, 0, 0], [selectedYear, selectedMonth, numDaysInMonth, 23, 59]);\n    const selectedHour = this.validateColumn(columns, 'hour', 3, minCompareVal, maxCompareVal, [selectedYear, selectedMonth, selectedDay, 0, 0], [selectedYear, selectedMonth, selectedDay, 23, 59]);\n    this.validateColumn(columns, 'minute', 4, minCompareVal, maxCompareVal, [selectedYear, selectedMonth, selectedDay, selectedHour, 0], [selectedYear, selectedMonth, selectedDay, selectedHour, 59]);\n    return columns;\n  }\n\n  calcMinMax() {\n    const todaysYear = new Date().getFullYear();\n\n    if (this.yearValues !== undefined) {\n      const years = convertToArrayOfNumbers(this.yearValues, 'year');\n\n      if (this.min === undefined) {\n        this.min = Math.min(...years).toString();\n      }\n\n      if (this.max === undefined) {\n        this.max = Math.max(...years).toString();\n      }\n    } else {\n      if (this.min === undefined) {\n        this.min = (todaysYear - 100).toString();\n      }\n\n      if (this.max === undefined) {\n        this.max = todaysYear.toString();\n      }\n    }\n\n    const min = this.datetimeMin = parseDate(this.min);\n    const max = this.datetimeMax = parseDate(this.max);\n    min.year = min.year || todaysYear;\n    max.year = max.year || todaysYear;\n    min.month = min.month || 1;\n    max.month = max.month || 12;\n    min.day = min.day || 1;\n    max.day = max.day || 31;\n    min.hour = min.hour || 0;\n    max.hour = max.hour || 23;\n    min.minute = min.minute || 0;\n    max.minute = max.minute || 59;\n    min.second = min.second || 0;\n    max.second = max.second || 59; // Ensure min/max constraints\n\n    if (min.year > max.year) {\n      console.error('min.year > max.year');\n      min.year = max.year - 100;\n    }\n\n    if (min.year === max.year) {\n      if (min.month > max.month) {\n        console.error('min.month > max.month');\n        min.month = 1;\n      } else if (min.month === max.month && min.day > max.day) {\n        console.error('min.day > max.day');\n        min.day = 1;\n      }\n    }\n  }\n\n  validateColumn(columns, name, index, min, max, lowerBounds, upperBounds) {\n    const column = columns.find(c => c.name === name);\n\n    if (!column) {\n      return 0;\n    }\n\n    const lb = lowerBounds.slice();\n    const ub = upperBounds.slice();\n    const options = column.options;\n    let indexMin = options.length - 1;\n    let indexMax = 0;\n\n    for (let i = 0; i < options.length; i++) {\n      const opts = options[i];\n      const value = opts.value;\n      lb[index] = opts.value;\n      ub[index] = opts.value;\n      const disabled = opts.disabled = value < lowerBounds[index] || value > upperBounds[index] || dateSortValue(ub[0], ub[1], ub[2], ub[3], ub[4]) < min || dateSortValue(lb[0], lb[1], lb[2], lb[3], lb[4]) > max;\n\n      if (!disabled) {\n        indexMin = Math.min(indexMin, i);\n        indexMax = Math.max(indexMax, i);\n      }\n    }\n\n    const selectedIndex = column.selectedIndex = clamp(indexMin, column.selectedIndex, indexMax);\n    const opt = column.options[selectedIndex];\n\n    if (opt) {\n      return opt.value;\n    }\n\n    return 0;\n  }\n\n  get text() {\n    // create the text of the formatted data\n    const template = this.displayFormat || this.pickerFormat || DEFAULT_FORMAT;\n\n    if (this.value === undefined || this.value === null || this.value.length === 0) {\n      return;\n    }\n\n    return renderDatetime(template, this.datetimeValue, this.locale);\n  }\n\n  hasValue() {\n    return this.text !== undefined;\n  }\n\n  setFocus() {\n    if (this.buttonEl) {\n      this.buttonEl.focus();\n    }\n  }\n\n  render() {\n    const {\n      inputId,\n      text,\n      disabled,\n      readonly,\n      isExpanded,\n      el,\n      placeholder\n    } = this;\n    const mode = getIonMode(this);\n    const labelId = inputId + '-lbl';\n    const label = findItemLabel(el);\n    const addPlaceholderClass = text === undefined && placeholder != null ? true : false; // If selected text has been passed in, use that first\n    // otherwise use the placeholder\n\n    const datetimeText = text === undefined ? placeholder != null ? placeholder : '' : text;\n\n    if (label) {\n      label.id = labelId;\n    }\n\n    renderHiddenInput(true, el, this.name, this.value, this.disabled);\n    return h(Host, {\n      onClick: this.onClick,\n      role: \"combobox\",\n      \"aria-disabled\": disabled ? 'true' : null,\n      \"aria-expanded\": `${isExpanded}`,\n      \"aria-haspopup\": \"true\",\n      \"aria-labelledby\": labelId,\n      class: {\n        [mode]: true,\n        'datetime-disabled': disabled,\n        'datetime-readonly': readonly,\n        'datetime-placeholder': addPlaceholderClass,\n        'in-item': hostContext('ion-item', el)\n      }\n    }, h(\"div\", {\n      class: \"datetime-text\"\n    }, datetimeText), h(\"button\", {\n      type: \"button\",\n      onFocus: this.onFocus,\n      onBlur: this.onBlur,\n      disabled: this.disabled,\n      ref: btnEl => this.buttonEl = btnEl\n    }));\n  }\n\n  get el() {\n    return getElement(this);\n  }\n\n  static get watchers() {\n    return {\n      \"disabled\": [\"disabledChanged\"],\n      \"value\": [\"valueChanged\"]\n    };\n  }\n\n  static get style() {\n    return \":host{padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);display:-ms-flexbox;display:flex;position:relative;min-width:16px;min-height:1.2em;font-family:var(--ion-font-family,inherit);text-overflow:ellipsis;white-space:nowrap;overflow:hidden;z-index:2}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){:host{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}:host(.in-item){position:static}:host(.datetime-placeholder){color:var(--placeholder-color)}:host(.datetime-disabled){opacity:.3;pointer-events:none}:host(.datetime-readonly){pointer-events:none}button{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none}:host-context([dir=rtl]) button,[dir=rtl] button{left:unset;right:unset;right:0}button::-moz-focus-inner{border:0}.datetime-text{font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;-ms-flex:1;flex:1;min-height:inherit;direction:ltr;overflow:inherit}:host-context([dir=rtl]) .datetime-text,[dir=rtl] .datetime-text{direction:rtl}:host{--placeholder-color:var(--ion-color-step-400,#999);--padding-top:10px;--padding-end:8px;--padding-bottom:10px;--padding-start:16px}\";\n  }\n\n};\n\nconst divyColumns = columns => {\n  const columnsWidth = [];\n  let col;\n  let width;\n\n  for (let i = 0; i < columns.length; i++) {\n    col = columns[i];\n    columnsWidth.push(0);\n\n    for (const option of col.options) {\n      width = option.text.length;\n\n      if (width > columnsWidth[i]) {\n        columnsWidth[i] = width;\n      }\n    }\n  }\n\n  if (columnsWidth.length === 2) {\n    width = Math.max(columnsWidth[0], columnsWidth[1]);\n    columns[0].align = 'right';\n    columns[1].align = 'left';\n    columns[0].optionsWidth = columns[1].optionsWidth = `${width * 17}px`;\n  } else if (columnsWidth.length === 3) {\n    width = Math.max(columnsWidth[0], columnsWidth[2]);\n    columns[0].align = 'right';\n    columns[1].columnWidth = `${columnsWidth[1] * 17}px`;\n    columns[0].optionsWidth = columns[2].optionsWidth = `${width * 17}px`;\n    columns[2].align = 'left';\n  }\n\n  return columns;\n};\n\nconst DEFAULT_FORMAT = 'MMM D, YYYY';\nlet datetimeIds = 0;\n/**\r\n * iOS Picker Enter Animation\r\n */\n\nconst iosEnterAnimation = baseEl => {\n  const baseAnimation = createAnimation();\n  const backdropAnimation = createAnimation();\n  const wrapperAnimation = createAnimation();\n  backdropAnimation.addElement(baseEl.querySelector('ion-backdrop')).fromTo('opacity', 0.01, 0.26);\n  wrapperAnimation.addElement(baseEl.querySelector('.picker-wrapper')).fromTo('transform', 'translateY(100%)', 'translateY(0%)');\n  return baseAnimation.addElement(baseEl).easing('cubic-bezier(.36,.66,.04,1)').duration(400).addAnimation([backdropAnimation, wrapperAnimation]);\n};\n/**\r\n * iOS Picker Leave Animation\r\n */\n\n\nconst iosLeaveAnimation = baseEl => {\n  const baseAnimation = createAnimation();\n  const backdropAnimation = createAnimation();\n  const wrapperAnimation = createAnimation();\n  backdropAnimation.addElement(baseEl.querySelector('ion-backdrop')).fromTo('opacity', 0.26, 0.01);\n  wrapperAnimation.addElement(baseEl.querySelector('.picker-wrapper')).fromTo('transform', 'translateY(0%)', 'translateY(100%)');\n  return baseAnimation.addElement(baseEl).easing('cubic-bezier(.36,.66,.04,1)').duration(400).addAnimation([backdropAnimation, wrapperAnimation]);\n};\n\nconst Picker = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.mode = getIonMode(this);\n    this.presented = false;\n    /**\n     * If `true`, the keyboard will be automatically dismissed when the overlay is presented.\n     */\n\n    this.keyboardClose = true;\n    /**\n     * Array of buttons to be displayed at the top of the picker.\n     */\n\n    this.buttons = [];\n    /**\n     * Array of columns to be displayed in the picker.\n     */\n\n    this.columns = [];\n    /**\n     * Number of milliseconds to wait before dismissing the picker.\n     */\n\n    this.duration = 0;\n    /**\n     * If `true`, a backdrop will be displayed behind the picker.\n     */\n\n    this.showBackdrop = true;\n    /**\n     * If `true`, the picker will be dismissed when the backdrop is clicked.\n     */\n\n    this.backdropDismiss = true;\n    /**\n     * If `true`, the picker will animate.\n     */\n\n    this.animated = true;\n\n    this.onBackdropTap = () => {\n      const cancelBtn = this.buttons.find(b => b.role === 'cancel');\n\n      if (cancelBtn) {\n        this.buttonClick(cancelBtn);\n      } else {\n        this.dismiss();\n      }\n    };\n\n    prepareOverlay(this.el);\n    this.didPresent = createEvent(this, \"ionPickerDidPresent\", 7);\n    this.willPresent = createEvent(this, \"ionPickerWillPresent\", 7);\n    this.willDismiss = createEvent(this, \"ionPickerWillDismiss\", 7);\n    this.didDismiss = createEvent(this, \"ionPickerDidDismiss\", 7);\n  }\n  /**\n   * Present the picker overlay after it has been created.\n   */\n\n\n  present() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      yield present(_this2, 'pickerEnter', iosEnterAnimation, iosEnterAnimation, undefined);\n\n      if (_this2.duration > 0) {\n        _this2.durationTimeout = setTimeout(() => _this2.dismiss(), _this2.duration);\n      }\n    })();\n  }\n  /**\n   * Dismiss the picker overlay after it has been presented.\n   *\n   * @param data Any data to emit in the dismiss events.\n   * @param role The role of the element that is dismissing the picker.\n   * This can be useful in a button handler for determining which button was\n   * clicked to dismiss the picker.\n   * Some examples include: ``\"cancel\"`, `\"destructive\"`, \"selected\"`, and `\"backdrop\"`.\n   */\n\n\n  dismiss(data, role) {\n    if (this.durationTimeout) {\n      clearTimeout(this.durationTimeout);\n    }\n\n    return dismiss(this, data, role, 'pickerLeave', iosLeaveAnimation, iosLeaveAnimation);\n  }\n  /**\n   * Returns a promise that resolves when the picker did dismiss.\n   */\n\n\n  onDidDismiss() {\n    return eventMethod(this.el, 'ionPickerDidDismiss');\n  }\n  /**\n   * Returns a promise that resolves when the picker will dismiss.\n   */\n\n\n  onWillDismiss() {\n    return eventMethod(this.el, 'ionPickerWillDismiss');\n  }\n  /**\n   * Get the column that matches the specified name.\n   *\n   * @param name The name of the column.\n   */\n\n\n  getColumn(name) {\n    return Promise.resolve(this.columns.find(column => column.name === name));\n  }\n\n  buttonClick(button) {\n    // if (this.disabled) {\n    //   return;\n    // }\n    // keep the time of the most recent button click\n    // a handler has been provided, execute it\n    // pass the handler the values from the inputs\n    const shouldDismiss = safeCall(button.handler, this.getSelected()) !== false;\n\n    if (shouldDismiss) {\n      return this.dismiss();\n    }\n\n    return Promise.resolve(false);\n  }\n\n  getSelected() {\n    const selected = {};\n    this.columns.forEach((col, index) => {\n      const selectedColumn = col.selectedIndex !== undefined ? col.options[col.selectedIndex] : undefined;\n      selected[col.name] = {\n        text: selectedColumn ? selectedColumn.text : undefined,\n        value: selectedColumn ? selectedColumn.value : undefined,\n        columnIndex: index\n      };\n    });\n    return selected;\n  }\n\n  render() {\n    const mode = getIonMode(this);\n    return h(Host, {\n      \"aria-modal\": \"true\",\n      class: Object.assign({\n        [mode]: true,\n        // Used internally for styling\n        [`picker-${mode}`]: true\n      }, getClassMap(this.cssClass)),\n      style: {\n        zIndex: `${20000 + this.overlayIndex}`\n      },\n      onIonBackdropTap: this.onBackdropTap\n    }, h(\"ion-backdrop\", {\n      visible: this.showBackdrop,\n      tappable: this.backdropDismiss\n    }), h(\"div\", {\n      class: \"picker-wrapper\",\n      role: \"dialog\"\n    }, h(\"div\", {\n      class: \"picker-toolbar\"\n    }, this.buttons.map(b => h(\"div\", {\n      class: buttonWrapperClass(b)\n    }, h(\"button\", {\n      type: \"button\",\n      onClick: () => this.buttonClick(b),\n      class: buttonClass(b)\n    }, b.text)))), h(\"div\", {\n      class: \"picker-columns\"\n    }, h(\"div\", {\n      class: \"picker-above-highlight\"\n    }), this.presented && this.columns.map(c => h(\"ion-picker-column\", {\n      col: c\n    })), h(\"div\", {\n      class: \"picker-below-highlight\"\n    }))));\n  }\n\n  get el() {\n    return getElement(this);\n  }\n\n  static get style() {\n    return \".sc-ion-picker-ios-h{--border-radius:0;--border-style:solid;--min-width:auto;--width:100%;--max-width:500px;--min-height:auto;--max-height:auto;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;left:0;top:0;display:block;position:absolute;width:100%;height:100%;font-family:var(--ion-font-family,inherit);contain:strict;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:1001}[dir=rtl].sc-ion-picker-ios-h, [dir=rtl] .sc-ion-picker-ios-h{left:unset;right:unset;right:0}.overlay-hidden.sc-ion-picker-ios-h{display:none}.picker-wrapper.sc-ion-picker-ios{border-radius:var(--border-radius);left:0;right:0;bottom:0;margin-left:auto;margin-right:auto;margin-top:auto;margin-bottom:auto;-webkit-transform:translate3d(0,100%,0);transform:translate3d(0,100%,0);display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:column;flex-direction:column;width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);background:var(--background);contain:strict;overflow:hidden;z-index:10}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){.picker-wrapper.sc-ion-picker-ios{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}.picker-toolbar.sc-ion-picker-ios{width:100%;background:transparent;contain:strict;z-index:1}.picker-button.sc-ion-picker-ios{border:0;font-family:inherit}.picker-button.sc-ion-picker-ios:active, .picker-button.sc-ion-picker-ios:focus{outline:none}.picker-columns.sc-ion-picker-ios{display:-ms-flexbox;display:flex;position:relative;-ms-flex-pack:center;justify-content:center;margin-bottom:var(--ion-safe-area-bottom,0);contain:strict;direction:ltr;overflow:hidden}.picker-above-highlight.sc-ion-picker-ios, .picker-below-highlight.sc-ion-picker-ios{display:none;pointer-events:none}.sc-ion-picker-ios-h{--background:var(--ion-background-color,#fff);--border-width:1px 0 0;--border-color:var(--ion-item-border-color,var(--ion-border-color,var(--ion-color-step-250,#c8c7cc)));--height:260px;color:var(--ion-item-color,var(--ion-text-color,#000))}.picker-toolbar.sc-ion-picker-ios{display:-ms-flexbox;display:flex;height:44px;border-bottom:.55px solid var(--border-color)}.picker-toolbar-button.sc-ion-picker-ios{-ms-flex:1;flex:1;text-align:end}.picker-toolbar-button.sc-ion-picker-ios:last-child .picker-button.sc-ion-picker-ios{font-weight:600}.picker-toolbar-button.sc-ion-picker-ios:first-child{font-weight:400;text-align:start}.picker-button.sc-ion-picker-ios, .picker-button.activated.sc-ion-picker-ios{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:1em;padding-right:1em;padding-top:0;padding-bottom:0;height:44px;background:transparent;color:var(--ion-color-primary,#3880ff);font-size:16px}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){.picker-button.sc-ion-picker-ios, .picker-button.activated.sc-ion-picker-ios{padding-left:unset;padding-right:unset;-webkit-padding-start:1em;padding-inline-start:1em;-webkit-padding-end:1em;padding-inline-end:1em}}.picker-columns.sc-ion-picker-ios{height:215px;-webkit-perspective:1000px;perspective:1000px}.picker-above-highlight.sc-ion-picker-ios{left:0;top:0;-webkit-transform:translateZ(90px);transform:translateZ(90px);display:block;position:absolute;width:100%;height:81px;border-bottom:1px solid var(--border-color);background:-webkit-gradient(linear,left top,left bottom,color-stop(20%,var(--background,var(--ion-background-color,#fff))),to(rgba(var(--background-rgb,var(--ion-background-color-rgb,255,255,255)),.8)));background:linear-gradient(180deg,var(--background,var(--ion-background-color,#fff)) 20%,rgba(var(--background-rgb,var(--ion-background-color-rgb,255,255,255)),.8));z-index:10}[dir=rtl].sc-ion-picker-ios-h .picker-above-highlight.sc-ion-picker-ios, [dir=rtl] .sc-ion-picker-ios-h .picker-above-highlight.sc-ion-picker-ios, [dir=rtl].sc-ion-picker-ios .picker-above-highlight.sc-ion-picker-ios{left:unset;right:unset;right:0}.picker-below-highlight.sc-ion-picker-ios{left:0;top:115px;-webkit-transform:translateZ(90px);transform:translateZ(90px);display:block;position:absolute;width:100%;height:119px;border-top:1px solid var(--border-color);background:-webkit-gradient(linear,left bottom,left top,color-stop(30%,var(--background,var(--ion-background-color,#fff))),to(rgba(var(--background-rgb,var(--ion-background-color-rgb,255,255,255)),.8)));background:linear-gradient(0deg,var(--background,var(--ion-background-color,#fff)) 30%,rgba(var(--background-rgb,var(--ion-background-color-rgb,255,255,255)),.8));z-index:11}[dir=rtl].sc-ion-picker-ios-h .picker-below-highlight.sc-ion-picker-ios, [dir=rtl] .sc-ion-picker-ios-h .picker-below-highlight.sc-ion-picker-ios, [dir=rtl].sc-ion-picker-ios .picker-below-highlight.sc-ion-picker-ios{left:unset;right:unset;right:0}\";\n  }\n\n};\n\nconst buttonWrapperClass = button => {\n  return {\n    [`picker-toolbar-${button.role}`]: button.role !== undefined,\n    'picker-toolbar-button': true\n  };\n};\n\nconst buttonClass = button => {\n  return Object.assign({\n    'picker-button': true,\n    'ion-activatable': true\n  }, getClassMap(button.cssClass));\n};\n\nconst PickerColumnCmp = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.optHeight = 0;\n    this.rotateFactor = 0;\n    this.scaleFactor = 1;\n    this.velocity = 0;\n    this.y = 0;\n    this.noAnimate = true;\n    this.ionPickerColChange = createEvent(this, \"ionPickerColChange\", 7);\n  }\n\n  colChanged() {\n    this.refresh();\n  }\n\n  connectedCallback() {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      let pickerRotateFactor = 0;\n      let pickerScaleFactor = 0.81;\n      const mode = getIonMode(_this3);\n\n      if (mode === 'ios') {\n        pickerRotateFactor = -0.46;\n        pickerScaleFactor = 1;\n      }\n\n      _this3.rotateFactor = pickerRotateFactor;\n      _this3.scaleFactor = pickerScaleFactor;\n      _this3.gesture = (yield import('./index-624eea58.js')).createGesture({\n        el: _this3.el,\n        gestureName: 'picker-swipe',\n        gesturePriority: 100,\n        threshold: 0,\n        onStart: ev => _this3.onStart(ev),\n        onMove: ev => _this3.onMove(ev),\n        onEnd: ev => _this3.onEnd(ev)\n      });\n\n      _this3.gesture.setDisabled(false);\n\n      _this3.tmrId = setTimeout(() => {\n        _this3.noAnimate = false;\n\n        _this3.refresh(true);\n      }, 250);\n    })();\n  }\n\n  componentDidLoad() {\n    const colEl = this.optsEl;\n\n    if (colEl) {\n      // DOM READ\n      // We perfom a DOM read over a rendered item, this needs to happen after the first render\n      this.optHeight = colEl.firstElementChild ? colEl.firstElementChild.clientHeight : 0;\n    }\n\n    this.refresh();\n  }\n\n  disconnectedCallback() {\n    cancelAnimationFrame(this.rafId);\n    clearTimeout(this.tmrId);\n\n    if (this.gesture) {\n      this.gesture.destroy();\n      this.gesture = undefined;\n    }\n  }\n\n  emitColChange() {\n    this.ionPickerColChange.emit(this.col);\n  }\n\n  setSelected(selectedIndex, duration) {\n    // if there is a selected index, then figure out it's y position\n    // if there isn't a selected index, then just use the top y position\n    const y = selectedIndex > -1 ? -(selectedIndex * this.optHeight) : 0;\n    this.velocity = 0; // set what y position we're at\n\n    cancelAnimationFrame(this.rafId);\n    this.update(y, duration, true);\n    this.emitColChange();\n  }\n\n  update(y, duration, saveY) {\n    if (!this.optsEl) {\n      return;\n    } // ensure we've got a good round number :)\n\n\n    let translateY = 0;\n    let translateZ = 0;\n    const {\n      col,\n      rotateFactor\n    } = this;\n    const selectedIndex = col.selectedIndex = this.indexForY(-y);\n    const durationStr = duration === 0 ? '' : duration + 'ms';\n    const scaleStr = `scale(${this.scaleFactor})`;\n    const children = this.optsEl.children;\n\n    for (let i = 0; i < children.length; i++) {\n      const button = children[i];\n      const opt = col.options[i];\n      const optOffset = i * this.optHeight + y;\n      let transform = '';\n\n      if (rotateFactor !== 0) {\n        const rotateX = optOffset * rotateFactor;\n\n        if (Math.abs(rotateX) <= 90) {\n          translateY = 0;\n          translateZ = 90;\n          transform = `rotateX(${rotateX}deg) `;\n        } else {\n          translateY = -9999;\n        }\n      } else {\n        translateZ = 0;\n        translateY = optOffset;\n      }\n\n      const selected = selectedIndex === i;\n      transform += `translate3d(0px,${translateY}px,${translateZ}px) `;\n\n      if (this.scaleFactor !== 1 && !selected) {\n        transform += scaleStr;\n      } // Update transition duration\n\n\n      if (this.noAnimate) {\n        opt.duration = 0;\n        button.style.transitionDuration = '';\n      } else if (duration !== opt.duration) {\n        opt.duration = duration;\n        button.style.transitionDuration = durationStr;\n      } // Update transform\n\n\n      if (transform !== opt.transform) {\n        opt.transform = transform;\n        button.style.transform = transform;\n      } // Update selected item\n\n\n      if (selected !== opt.selected) {\n        opt.selected = selected;\n\n        if (selected) {\n          button.classList.add(PICKER_OPT_SELECTED);\n        } else {\n          button.classList.remove(PICKER_OPT_SELECTED);\n        }\n      }\n    }\n\n    this.col.prevSelected = selectedIndex;\n\n    if (saveY) {\n      this.y = y;\n    }\n\n    if (this.lastIndex !== selectedIndex) {\n      // have not set a last index yet\n      hapticSelectionChanged();\n      this.lastIndex = selectedIndex;\n    }\n  }\n\n  decelerate() {\n    if (this.velocity !== 0) {\n      // still decelerating\n      this.velocity *= DECELERATION_FRICTION; // do not let it go slower than a velocity of 1\n\n      this.velocity = this.velocity > 0 ? Math.max(this.velocity, 1) : Math.min(this.velocity, -1);\n      let y = this.y + this.velocity;\n\n      if (y > this.minY) {\n        // whoops, it's trying to scroll up farther than the options we have!\n        y = this.minY;\n        this.velocity = 0;\n      } else if (y < this.maxY) {\n        // gahh, it's trying to scroll down farther than we can!\n        y = this.maxY;\n        this.velocity = 0;\n      }\n\n      this.update(y, 0, true);\n      const notLockedIn = Math.round(y) % this.optHeight !== 0 || Math.abs(this.velocity) > 1;\n\n      if (notLockedIn) {\n        // isn't locked in yet, keep decelerating until it is\n        this.rafId = requestAnimationFrame(() => this.decelerate());\n      } else {\n        this.velocity = 0;\n        this.emitColChange();\n      }\n    } else if (this.y % this.optHeight !== 0) {\n      // needs to still get locked into a position so options line up\n      const currentPos = Math.abs(this.y % this.optHeight); // create a velocity in the direction it needs to scroll\n\n      this.velocity = currentPos > this.optHeight / 2 ? 1 : -1;\n      this.decelerate();\n    }\n  }\n\n  indexForY(y) {\n    return Math.min(Math.max(Math.abs(Math.round(y / this.optHeight)), 0), this.col.options.length - 1);\n  } // TODO should this check disabled?\n\n\n  onStart(detail) {\n    // We have to prevent default in order to block scrolling under the picker\n    // but we DO NOT have to stop propagation, since we still want\n    // some \"click\" events to capture\n    detail.event.preventDefault();\n    detail.event.stopPropagation(); // reset everything\n\n    cancelAnimationFrame(this.rafId);\n    const options = this.col.options;\n    let minY = options.length - 1;\n    let maxY = 0;\n\n    for (let i = 0; i < options.length; i++) {\n      if (!options[i].disabled) {\n        minY = Math.min(minY, i);\n        maxY = Math.max(maxY, i);\n      }\n    }\n\n    this.minY = -(minY * this.optHeight);\n    this.maxY = -(maxY * this.optHeight);\n  }\n\n  onMove(detail) {\n    detail.event.preventDefault();\n    detail.event.stopPropagation(); // update the scroll position relative to pointer start position\n\n    let y = this.y + detail.deltaY;\n\n    if (y > this.minY) {\n      // scrolling up higher than scroll area\n      y = Math.pow(y, 0.8);\n      this.bounceFrom = y;\n    } else if (y < this.maxY) {\n      // scrolling down below scroll area\n      y += Math.pow(this.maxY - y, 0.9);\n      this.bounceFrom = y;\n    } else {\n      this.bounceFrom = 0;\n    }\n\n    this.update(y, 0, false);\n  }\n\n  onEnd(detail) {\n    if (this.bounceFrom > 0) {\n      // bounce back up\n      this.update(this.minY, 100, true);\n      this.emitColChange();\n      return;\n    } else if (this.bounceFrom < 0) {\n      // bounce back down\n      this.update(this.maxY, 100, true);\n      this.emitColChange();\n      return;\n    }\n\n    this.velocity = clamp(-MAX_PICKER_SPEED, detail.velocityY * 23, MAX_PICKER_SPEED);\n\n    if (this.velocity === 0 && detail.deltaY === 0) {\n      const opt = detail.event.target.closest('.picker-opt');\n\n      if (opt && opt.hasAttribute('opt-index')) {\n        this.setSelected(parseInt(opt.getAttribute('opt-index'), 10), TRANSITION_DURATION);\n      }\n    } else {\n      this.y += detail.deltaY;\n      this.decelerate();\n    }\n  }\n\n  refresh(forceRefresh) {\n    let min = this.col.options.length - 1;\n    let max = 0;\n    const options = this.col.options;\n\n    for (let i = 0; i < options.length; i++) {\n      if (!options[i].disabled) {\n        min = Math.min(min, i);\n        max = Math.max(max, i);\n      }\n    }\n    /**\n     * Only update selected value if column has a\n     * velocity of 0. If it does not, then the\n     * column is animating might land on\n     * a value different than the value at\n     * selectedIndex\n     */\n\n\n    if (this.velocity !== 0) {\n      return;\n    }\n\n    const selectedIndex = clamp(min, this.col.selectedIndex || 0, max);\n\n    if (this.col.prevSelected !== selectedIndex || forceRefresh) {\n      const y = selectedIndex * this.optHeight * -1;\n      this.velocity = 0;\n      this.update(y, TRANSITION_DURATION, true);\n    }\n  }\n\n  render() {\n    const col = this.col;\n    const Button = 'button';\n    const mode = getIonMode(this);\n    return h(Host, {\n      class: {\n        [mode]: true,\n        'picker-col': true,\n        'picker-opts-left': this.col.align === 'left',\n        'picker-opts-right': this.col.align === 'right'\n      },\n      style: {\n        'max-width': this.col.columnWidth\n      }\n    }, col.prefix && h(\"div\", {\n      class: \"picker-prefix\",\n      style: {\n        width: col.prefixWidth\n      }\n    }, col.prefix), h(\"div\", {\n      class: \"picker-opts\",\n      style: {\n        maxWidth: col.optionsWidth\n      },\n      ref: el => this.optsEl = el\n    }, col.options.map((o, index) => h(Button, {\n      type: \"button\",\n      class: {\n        'picker-opt': true,\n        'picker-opt-disabled': !!o.disabled\n      },\n      \"opt-index\": index\n    }, o.text))), col.suffix && h(\"div\", {\n      class: \"picker-suffix\",\n      style: {\n        width: col.suffixWidth\n      }\n    }, col.suffix));\n  }\n\n  get el() {\n    return getElement(this);\n  }\n\n  static get watchers() {\n    return {\n      \"col\": [\"colChanged\"]\n    };\n  }\n\n  static get style() {\n    return \".picker-col{display:-ms-flexbox;display:flex;position:relative;-ms-flex:1;flex:1;-ms-flex-pack:center;justify-content:center;height:100%;-webkit-box-sizing:content-box;box-sizing:content-box;contain:content}.picker-opts{position:relative;-ms-flex:1;flex:1;max-width:100%}.picker-opt{left:0;top:0;display:block;position:absolute;width:100%;border:0;text-align:center;text-overflow:ellipsis;white-space:nowrap;contain:strict;overflow:hidden;will-change:transform}:host-context([dir=rtl]) .picker-opt,[dir=rtl] .picker-opt{left:unset;right:unset;right:0}.picker-opt.picker-opt-disabled{pointer-events:none}.picker-opt-disabled{opacity:0}.picker-opts-left{-ms-flex-pack:start;justify-content:flex-start}.picker-opts-right{-ms-flex-pack:end;justify-content:flex-end}.picker-opt:active,.picker-opt:focus{outline:none}.picker-prefix{text-align:end}.picker-prefix,.picker-suffix{position:relative;-ms-flex:1;flex:1;white-space:nowrap}.picker-suffix{text-align:start}.picker-col{padding-left:4px;padding-right:4px;padding-top:0;padding-bottom:0;-webkit-transform-style:preserve-3d;transform-style:preserve-3d}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){.picker-col{padding-left:unset;padding-right:unset;-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:4px;padding-inline-end:4px}}.picker-opts,.picker-prefix,.picker-suffix{top:77px;pointer-events:none}.picker-opt,.picker-opts,.picker-prefix,.picker-suffix{-webkit-transform-style:preserve-3d;transform-style:preserve-3d;color:inherit;font-size:20px;line-height:42px}.picker-opt{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;-webkit-transform-origin:center center;transform-origin:center center;height:46px;-webkit-transition-timing-function:ease-out;transition-timing-function:ease-out;background:transparent;-webkit-backface-visibility:hidden;backface-visibility:hidden;pointer-events:auto}:host-context([dir=rtl]) .picker-opt,[dir=rtl] .picker-opt{-webkit-transform-origin:calc(100% - center) center;transform-origin:calc(100% - center) center}\";\n  }\n\n};\nconst PICKER_OPT_SELECTED = 'picker-opt-selected';\nconst DECELERATION_FRICTION = 0.97;\nconst MAX_PICKER_SPEED = 90;\nconst TRANSITION_DURATION = 150;\nexport { Datetime as ion_datetime, Picker as ion_picker, PickerColumnCmp as ion_picker_column };","map":{"version":3,"sources":["/home/ivan/HACKUPC2022/Join/node_modules/ionic-mqtt/node_modules/@ionic/core/dist/esm/ion-datetime_3-ios.entry.js"],"names":["r","registerInstance","d","createEvent","c","getIonMode","h","H","Host","e","getElement","clamp","f","findItemLabel","a","renderHiddenInput","createAnimation","p","pickerController","prepareOverlay","present","dismiss","g","eventMethod","s","safeCall","hostContext","getClassMap","b","hapticSelectionChanged","getDateValue","date","format","getValue","getValueFromFormat","undefined","FORMAT_A","FORMAT_a","ampm","defaultDate","parseDate","Date","toISOString","renderDatetime","template","value","locale","tokens","hasText","FORMAT_KEYS","forEach","index","indexOf","token","text","renderTextFormat","k","push","replace","i","length","FORMAT_DDDD","FORMAT_DDD","year","month","day","getDay","dayNames","DAY_NAMES","dayShortNames","DAY_SHORT_NAMES","hour","toUpperCase","FORMAT_YY","FORMAT_MM","FORMAT_DD","FORMAT_HH","FORMAT_mm","FORMAT_ss","twoDigit","FORMAT_YYYY","fourDigit","FORMAT_MMMM","monthNames","MONTH_NAMES","FORMAT_MMM","monthShortNames","MONTH_SHORT_NAMES","FORMAT_hh","FORMAT_h","toString","dateValueRange","min","max","opts","Error","FORMAT_M","FORMAT_D","FORMAT_H","FORMAT_m","FORMAT_s","dateSortValue","minute","parseInt","dateDataSortValue","data","daysInMonth","isLeapYear","ISO_8601_REGEXP","TIME_REGEXP","val","parse","exec","unshift","tzOffset","second","millisecond","getLocalDateTime","dateString","UTC","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","updateDate","existingData","newData","localDateTime","Number","isNaN","getTime","Object","assign","key","keys","console","warn","hasOwnProperty","parseTemplate","formats","charAt","words","split","filter","w","word","VALID_AMPM_PREFIX","convertFormatToKey","convertDataToISO","rtn","threeDigit","Math","floor","abs","convertToArrayOfStrings","input","type","values","Array","isArray","map","trim","convertToArrayOfNumbers","num","isFinite","slice","Datetime","constructor","hostRef","inputId","datetimeIds","datetimeMin","datetimeMax","datetimeValue","isExpanded","name","disabled","readonly","displayFormat","cancelText","doneText","onClick","setFocus","open","onFocus","ionFocus","emit","onBlur","ionBlur","ionCancel","ionChange","ionStyle","disabledChanged","emitStyle","valueChanged","updateDatetimeValue","componentWillLoad","pickerOptions","generatePickerOptions","picker","create","onDidDismiss","then","addEventListener","event","detail","colSelectedIndex","selectedIndex","colOptions","options","changeData","columns","generateColumns","placeholder","hasValue","mode","buttons","role","handler","getTimezoneOffset","pickerFormat","DEFAULT_FORMAT","calcMinMax","self","optValue","findIndex","opt","find","column","validateColumns","divyColumns","today","minCompareVal","maxCompareVal","yearCol","selectedYear","col","yearOpt","selectedMonth","validateColumn","numDaysInMonth","selectedDay","selectedHour","todaysYear","yearValues","years","error","lowerBounds","upperBounds","lb","ub","indexMin","indexMax","buttonEl","focus","render","el","labelId","label","addPlaceholderClass","datetimeText","id","class","ref","btnEl","watchers","style","columnsWidth","width","option","align","optionsWidth","columnWidth","iosEnterAnimation","baseEl","baseAnimation","backdropAnimation","wrapperAnimation","addElement","querySelector","fromTo","easing","duration","addAnimation","iosLeaveAnimation","Picker","presented","keyboardClose","showBackdrop","backdropDismiss","animated","onBackdropTap","cancelBtn","buttonClick","didPresent","willPresent","willDismiss","didDismiss","durationTimeout","setTimeout","clearTimeout","onWillDismiss","getColumn","Promise","resolve","button","shouldDismiss","getSelected","selected","selectedColumn","columnIndex","cssClass","zIndex","overlayIndex","onIonBackdropTap","visible","tappable","buttonWrapperClass","buttonClass","PickerColumnCmp","optHeight","rotateFactor","scaleFactor","velocity","y","noAnimate","ionPickerColChange","colChanged","refresh","connectedCallback","pickerRotateFactor","pickerScaleFactor","gesture","createGesture","gestureName","gesturePriority","threshold","onStart","ev","onMove","onEnd","setDisabled","tmrId","componentDidLoad","colEl","optsEl","firstElementChild","clientHeight","disconnectedCallback","cancelAnimationFrame","rafId","destroy","emitColChange","setSelected","update","saveY","translateY","translateZ","indexForY","durationStr","scaleStr","children","optOffset","transform","rotateX","transitionDuration","classList","add","PICKER_OPT_SELECTED","remove","prevSelected","lastIndex","decelerate","DECELERATION_FRICTION","minY","maxY","notLockedIn","round","requestAnimationFrame","currentPos","preventDefault","stopPropagation","deltaY","pow","bounceFrom","MAX_PICKER_SPEED","velocityY","target","closest","hasAttribute","getAttribute","TRANSITION_DURATION","forceRefresh","Button","prefix","prefixWidth","maxWidth","o","suffix","suffixWidth","ion_datetime","ion_picker","ion_picker_column"],"mappings":"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","sourcesContent":["import { r as registerInstance, d as createEvent, c as getIonMode, h, H as Host, e as getElement } from './core-feeeff0d.js';\nimport './config-3c7f3790.js';\nimport { c as clamp, f as findItemLabel, a as renderHiddenInput } from './helpers-46f4a262.js';\nimport { c as createAnimation } from './animation-af478fe9.js';\nimport { p as pickerController, d as prepareOverlay, e as present, f as dismiss, g as eventMethod, s as safeCall } from './overlays-10640d86.js';\nimport { h as hostContext, g as getClassMap } from './theme-18cbe2cc.js';\nimport { b as hapticSelectionChanged } from './haptic-c8f1473e.js';\n\n/**\r\n * Gets a date value given a format\r\n * Defaults to the current date if\r\n * no date given\r\n */\r\nconst getDateValue = (date, format) => {\r\n    const getValue = getValueFromFormat(date, format);\r\n    if (getValue !== undefined) {\r\n        if (format === FORMAT_A || format === FORMAT_a) {\r\n            date.ampm = getValue;\r\n        }\r\n        return getValue;\r\n    }\r\n    const defaultDate = parseDate(new Date().toISOString());\r\n    return getValueFromFormat(defaultDate, format);\r\n};\r\nconst renderDatetime = (template, value, locale) => {\r\n    if (value === undefined) {\r\n        return undefined;\r\n    }\r\n    const tokens = [];\r\n    let hasText = false;\r\n    FORMAT_KEYS.forEach((format, index) => {\r\n        if (template.indexOf(format.f) > -1) {\r\n            const token = '{' + index + '}';\r\n            const text = renderTextFormat(format.f, value[format.k], value, locale);\r\n            if (!hasText && text !== undefined && value[format.k] != null) {\r\n                hasText = true;\r\n            }\r\n            tokens.push(token, text || '');\r\n            template = template.replace(format.f, token);\r\n        }\r\n    });\r\n    if (!hasText) {\r\n        return undefined;\r\n    }\r\n    for (let i = 0; i < tokens.length; i += 2) {\r\n        template = template.replace(tokens[i], tokens[i + 1]);\r\n    }\r\n    return template;\r\n};\r\nconst renderTextFormat = (format, value, date, locale) => {\r\n    if ((format === FORMAT_DDDD || format === FORMAT_DDD)) {\r\n        try {\r\n            value = (new Date(date.year, date.month - 1, date.day)).getDay();\r\n            if (format === FORMAT_DDDD) {\r\n                return (locale.dayNames ? locale.dayNames : DAY_NAMES)[value];\r\n            }\r\n            return (locale.dayShortNames ? locale.dayShortNames : DAY_SHORT_NAMES)[value];\r\n        }\r\n        catch (e) {\r\n            // ignore\r\n        }\r\n        return undefined;\r\n    }\r\n    if (format === FORMAT_A) {\r\n        return date !== undefined && date.hour !== undefined\r\n            ? (date.hour < 12 ? 'AM' : 'PM')\r\n            : value ? value.toUpperCase() : '';\r\n    }\r\n    if (format === FORMAT_a) {\r\n        return date !== undefined && date.hour !== undefined\r\n            ? (date.hour < 12 ? 'am' : 'pm')\r\n            : value || '';\r\n    }\r\n    if (value == null) {\r\n        return '';\r\n    }\r\n    if (format === FORMAT_YY || format === FORMAT_MM ||\r\n        format === FORMAT_DD || format === FORMAT_HH ||\r\n        format === FORMAT_mm || format === FORMAT_ss) {\r\n        return twoDigit(value);\r\n    }\r\n    if (format === FORMAT_YYYY) {\r\n        return fourDigit(value);\r\n    }\r\n    if (format === FORMAT_MMMM) {\r\n        return (locale.monthNames ? locale.monthNames : MONTH_NAMES)[value - 1];\r\n    }\r\n    if (format === FORMAT_MMM) {\r\n        return (locale.monthShortNames ? locale.monthShortNames : MONTH_SHORT_NAMES)[value - 1];\r\n    }\r\n    if (format === FORMAT_hh || format === FORMAT_h) {\r\n        if (value === 0) {\r\n            return '12';\r\n        }\r\n        if (value > 12) {\r\n            value -= 12;\r\n        }\r\n        if (format === FORMAT_hh && value < 10) {\r\n            return ('0' + value);\r\n        }\r\n    }\r\n    return value.toString();\r\n};\r\nconst dateValueRange = (format, min, max) => {\r\n    const opts = [];\r\n    if (format === FORMAT_YYYY || format === FORMAT_YY) {\r\n        // year\r\n        if (max.year === undefined || min.year === undefined) {\r\n            throw new Error('min and max year is undefined');\r\n        }\r\n        for (let i = max.year; i >= min.year; i--) {\r\n            opts.push(i);\r\n        }\r\n    }\r\n    else if (format === FORMAT_MMMM || format === FORMAT_MMM ||\r\n        format === FORMAT_MM || format === FORMAT_M ||\r\n        format === FORMAT_hh || format === FORMAT_h) {\r\n        // month or 12-hour\r\n        for (let i = 1; i < 13; i++) {\r\n            opts.push(i);\r\n        }\r\n    }\r\n    else if (format === FORMAT_DDDD || format === FORMAT_DDD ||\r\n        format === FORMAT_DD || format === FORMAT_D) {\r\n        // day\r\n        for (let i = 1; i < 32; i++) {\r\n            opts.push(i);\r\n        }\r\n    }\r\n    else if (format === FORMAT_HH || format === FORMAT_H) {\r\n        // 24-hour\r\n        for (let i = 0; i < 24; i++) {\r\n            opts.push(i);\r\n        }\r\n    }\r\n    else if (format === FORMAT_mm || format === FORMAT_m) {\r\n        // minutes\r\n        for (let i = 0; i < 60; i++) {\r\n            opts.push(i);\r\n        }\r\n    }\r\n    else if (format === FORMAT_ss || format === FORMAT_s) {\r\n        // seconds\r\n        for (let i = 0; i < 60; i++) {\r\n            opts.push(i);\r\n        }\r\n    }\r\n    else if (format === FORMAT_A || format === FORMAT_a) {\r\n        // AM/PM\r\n        opts.push('am', 'pm');\r\n    }\r\n    return opts;\r\n};\r\nconst dateSortValue = (year, month, day, hour = 0, minute = 0) => {\r\n    return parseInt(`1${fourDigit(year)}${twoDigit(month)}${twoDigit(day)}${twoDigit(hour)}${twoDigit(minute)}`, 10);\r\n};\r\nconst dateDataSortValue = (data) => {\r\n    return dateSortValue(data.year, data.month, data.day, data.hour, data.minute);\r\n};\r\nconst daysInMonth = (month, year) => {\r\n    return (month === 4 || month === 6 || month === 9 || month === 11) ? 30 : (month === 2) ? isLeapYear(year) ? 29 : 28 : 31;\r\n};\r\nconst isLeapYear = (year) => {\r\n    return (year % 4 === 0 && year % 100 !== 0) || (year % 400 === 0);\r\n};\r\nconst ISO_8601_REGEXP = /^(\\d{4}|[+\\-]\\d{6})(?:-(\\d{2})(?:-(\\d{2}))?)?(?:T(\\d{2}):(\\d{2})(?::(\\d{2})(?:\\.(\\d{3}))?)?(?:(Z)|([+\\-])(\\d{2})(?::(\\d{2}))?)?)?$/;\r\nconst TIME_REGEXP = /^((\\d{2}):(\\d{2})(?::(\\d{2})(?:\\.(\\d{3}))?)?(?:(Z)|([+\\-])(\\d{2})(?::(\\d{2}))?)?)?$/;\r\nconst parseDate = (val) => {\r\n    // manually parse IS0 cuz Date.parse cannot be trusted\r\n    // ISO 8601 format: 1994-12-15T13:47:20Z\r\n    let parse = null;\r\n    if (val != null && val !== '') {\r\n        // try parsing for just time first, HH:MM\r\n        parse = TIME_REGEXP.exec(val);\r\n        if (parse) {\r\n            // adjust the array so it fits nicely with the datetime parse\r\n            parse.unshift(undefined, undefined);\r\n            parse[2] = parse[3] = undefined;\r\n        }\r\n        else {\r\n            // try parsing for full ISO datetime\r\n            parse = ISO_8601_REGEXP.exec(val);\r\n        }\r\n    }\r\n    if (parse === null) {\r\n        // wasn't able to parse the ISO datetime\r\n        return undefined;\r\n    }\r\n    // ensure all the parse values exist with at least 0\r\n    for (let i = 1; i < 8; i++) {\r\n        parse[i] = parse[i] !== undefined ? parseInt(parse[i], 10) : undefined;\r\n    }\r\n    let tzOffset = 0;\r\n    if (parse[9] && parse[10]) {\r\n        // hours\r\n        tzOffset = parseInt(parse[10], 10) * 60;\r\n        if (parse[11]) {\r\n            // minutes\r\n            tzOffset += parseInt(parse[11], 10);\r\n        }\r\n        if (parse[9] === '-') {\r\n            // + or -\r\n            tzOffset *= -1;\r\n        }\r\n    }\r\n    return {\r\n        year: parse[1],\r\n        month: parse[2],\r\n        day: parse[3],\r\n        hour: parse[4],\r\n        minute: parse[5],\r\n        second: parse[6],\r\n        millisecond: parse[7],\r\n        tzOffset,\r\n    };\r\n};\r\n/**\r\n * Converts a valid UTC datetime string\r\n * To the user's local timezone\r\n * Note: This is not meant for time strings\r\n * such as \"01:47\"\r\n */\r\nconst getLocalDateTime = (dateString = '') => {\r\n    /**\r\n     * If user passed in undefined\r\n     * or null, convert it to the\r\n     * empty string since the rest\r\n     * of this functions expects\r\n     * a string\r\n     */\r\n    if (dateString === undefined || dateString === null) {\r\n        dateString = '';\r\n    }\r\n    /**\r\n     * Ensures that YYYY-MM-DD, YYYY-MM,\r\n     * YYYY-DD, etc does not get affected\r\n     * by timezones and stays on the day/month\r\n     * that the user provided\r\n     */\r\n    if (dateString.length === 10 ||\r\n        dateString.length === 7) {\r\n        dateString += ' ';\r\n    }\r\n    const date = (typeof dateString === 'string' && dateString.length > 0) ? new Date(dateString) : new Date();\r\n    return new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\r\n};\r\nconst updateDate = (existingData, newData) => {\r\n    if (!newData || typeof newData === 'string') {\r\n        const localDateTime = getLocalDateTime(newData);\r\n        if (!Number.isNaN(localDateTime.getTime())) {\r\n            newData = localDateTime.toISOString();\r\n        }\r\n    }\r\n    if (newData && newData !== '') {\r\n        if (typeof newData === 'string') {\r\n            // new date is a string, and hopefully in the ISO format\r\n            // convert it to our DatetimeData if a valid ISO\r\n            newData = parseDate(newData);\r\n            if (newData) {\r\n                // successfully parsed the ISO string to our DatetimeData\r\n                Object.assign(existingData, newData);\r\n                return true;\r\n            }\r\n        }\r\n        else if ((newData.year || newData.hour || newData.month || newData.day || newData.minute || newData.second)) {\r\n            // newData is from the datetime picker's selected values\r\n            // update the existing datetimeValue with the new values\r\n            if (newData.ampm !== undefined && newData.hour !== undefined) {\r\n                // change the value of the hour based on whether or not it is am or pm\r\n                // if the meridiem is pm and equal to 12, it remains 12\r\n                // otherwise we add 12 to the hour value\r\n                // if the meridiem is am and equal to 12, we change it to 0\r\n                // otherwise we use its current hour value\r\n                // for example: 8 pm becomes 20, 12 am becomes 0, 4 am becomes 4\r\n                newData.hour.value = (newData.ampm.value === 'pm')\r\n                    ? (newData.hour.value === 12 ? 12 : newData.hour.value + 12)\r\n                    : (newData.hour.value === 12 ? 0 : newData.hour.value);\r\n            }\r\n            // merge new values from the picker's selection\r\n            // to the existing DatetimeData values\r\n            for (const key of Object.keys(newData)) {\r\n                existingData[key] = newData[key].value;\r\n            }\r\n            return true;\r\n        }\r\n        else if (newData.ampm) {\r\n            // Even though in the picker column hour values are between 1 and 12, the hour value is actually normalized\r\n            // to [0, 23] interval. Because of this when changing between AM and PM we have to update the hour so it points\r\n            // to the correct HH hour\r\n            newData.hour = {\r\n                value: newData.hour\r\n                    ? newData.hour.value\r\n                    : (newData.ampm.value === 'pm'\r\n                        ? (existingData.hour < 12 ? existingData.hour + 12 : existingData.hour)\r\n                        : (existingData.hour >= 12 ? existingData.hour - 12 : existingData.hour))\r\n            };\r\n            existingData['hour'] = newData['hour'].value;\r\n            existingData['ampm'] = newData['ampm'].value;\r\n            return true;\r\n        }\r\n        // eww, invalid data\r\n        console.warn(`Error parsing date: \"${newData}\". Please provide a valid ISO 8601 datetime format: https://www.w3.org/TR/NOTE-datetime`);\r\n    }\r\n    else {\r\n        // blank data, clear everything out\r\n        for (const k in existingData) {\r\n            if (existingData.hasOwnProperty(k)) {\r\n                delete existingData[k];\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n};\r\nconst parseTemplate = (template) => {\r\n    const formats = [];\r\n    template = template.replace(/[^\\w\\s]/gi, ' ');\r\n    FORMAT_KEYS.forEach(format => {\r\n        if (format.f.length > 1 && template.indexOf(format.f) > -1 && template.indexOf(format.f + format.f.charAt(0)) < 0) {\r\n            template = template.replace(format.f, ' ' + format.f + ' ');\r\n        }\r\n    });\r\n    const words = template.split(' ').filter(w => w.length > 0);\r\n    words.forEach((word, i) => {\r\n        FORMAT_KEYS.forEach(format => {\r\n            if (word === format.f) {\r\n                if (word === FORMAT_A || word === FORMAT_a) {\r\n                    // this format is an am/pm format, so it's an \"a\" or \"A\"\r\n                    if ((formats.indexOf(FORMAT_h) < 0 && formats.indexOf(FORMAT_hh) < 0) ||\r\n                        VALID_AMPM_PREFIX.indexOf(words[i - 1]) === -1) {\r\n                        // template does not already have a 12-hour format\r\n                        // or this am/pm format doesn't have a hour, minute, or second format immediately before it\r\n                        // so do not treat this word \"a\" or \"A\" as the am/pm format\r\n                        return;\r\n                    }\r\n                }\r\n                formats.push(word);\r\n            }\r\n        });\r\n    });\r\n    return formats;\r\n};\r\nconst getValueFromFormat = (date, format) => {\r\n    if (format === FORMAT_A || format === FORMAT_a) {\r\n        return (date.hour < 12 ? 'am' : 'pm');\r\n    }\r\n    if (format === FORMAT_hh || format === FORMAT_h) {\r\n        return (date.hour > 12 ? date.hour - 12 : (date.hour === 0 ? 12 : date.hour));\r\n    }\r\n    return date[convertFormatToKey(format)];\r\n};\r\nconst convertFormatToKey = (format) => {\r\n    for (const k in FORMAT_KEYS) {\r\n        if (FORMAT_KEYS[k].f === format) {\r\n            return FORMAT_KEYS[k].k;\r\n        }\r\n    }\r\n    return undefined;\r\n};\r\nconst convertDataToISO = (data) => {\r\n    // https://www.w3.org/TR/NOTE-datetime\r\n    let rtn = '';\r\n    if (data.year !== undefined) {\r\n        // YYYY\r\n        rtn = fourDigit(data.year);\r\n        if (data.month !== undefined) {\r\n            // YYYY-MM\r\n            rtn += '-' + twoDigit(data.month);\r\n            if (data.day !== undefined) {\r\n                // YYYY-MM-DD\r\n                rtn += '-' + twoDigit(data.day);\r\n                if (data.hour !== undefined) {\r\n                    // YYYY-MM-DDTHH:mm:SS\r\n                    rtn += `T${twoDigit(data.hour)}:${twoDigit(data.minute)}:${twoDigit(data.second)}`;\r\n                    if (data.millisecond > 0) {\r\n                        // YYYY-MM-DDTHH:mm:SS.SSS\r\n                        rtn += '.' + threeDigit(data.millisecond);\r\n                    }\r\n                    if (data.tzOffset === undefined) {\r\n                        // YYYY-MM-DDTHH:mm:SSZ\r\n                        rtn += 'Z';\r\n                    }\r\n                    else {\r\n                        // YYYY-MM-DDTHH:mm:SS+/-HH:mm\r\n                        rtn += (data.tzOffset > 0 ? '+' : '-') + twoDigit(Math.floor(Math.abs(data.tzOffset / 60))) + ':' + twoDigit(data.tzOffset % 60);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else if (data.hour !== undefined) {\r\n        // HH:mm\r\n        rtn = twoDigit(data.hour) + ':' + twoDigit(data.minute);\r\n        if (data.second !== undefined) {\r\n            // HH:mm:SS\r\n            rtn += ':' + twoDigit(data.second);\r\n            if (data.millisecond !== undefined) {\r\n                // HH:mm:SS.SSS\r\n                rtn += '.' + threeDigit(data.millisecond);\r\n            }\r\n        }\r\n    }\r\n    return rtn;\r\n};\r\n/**\r\n * Use to convert a string of comma separated strings or\r\n * an array of strings, and clean up any user input\r\n */\r\nconst convertToArrayOfStrings = (input, type) => {\r\n    if (input == null) {\r\n        return undefined;\r\n    }\r\n    if (typeof input === 'string') {\r\n        // convert the string to an array of strings\r\n        // auto remove any [] characters\r\n        input = input.replace(/\\[|\\]/g, '').split(',');\r\n    }\r\n    let values;\r\n    if (Array.isArray(input)) {\r\n        // trim up each string value\r\n        values = input.map(val => val.toString().trim());\r\n    }\r\n    if (values === undefined || values.length === 0) {\r\n        console.warn(`Invalid \"${type}Names\". Must be an array of strings, or a comma separated string.`);\r\n    }\r\n    return values;\r\n};\r\n/**\r\n * Use to convert a string of comma separated numbers or\r\n * an array of numbers, and clean up any user input\r\n */\r\nconst convertToArrayOfNumbers = (input, type) => {\r\n    if (typeof input === 'string') {\r\n        // convert the string to an array of strings\r\n        // auto remove any whitespace and [] characters\r\n        input = input.replace(/\\[|\\]|\\s/g, '').split(',');\r\n    }\r\n    let values;\r\n    if (Array.isArray(input)) {\r\n        // ensure each value is an actual number in the returned array\r\n        values = input\r\n            .map((num) => parseInt(num, 10))\r\n            .filter(isFinite);\r\n    }\r\n    else {\r\n        values = [input];\r\n    }\r\n    if (values.length === 0) {\r\n        console.warn(`Invalid \"${type}Values\". Must be an array of numbers, or a comma separated string of numbers.`);\r\n    }\r\n    return values;\r\n};\r\nconst twoDigit = (val) => {\r\n    return ('0' + (val !== undefined ? Math.abs(val) : '0')).slice(-2);\r\n};\r\nconst threeDigit = (val) => {\r\n    return ('00' + (val !== undefined ? Math.abs(val) : '0')).slice(-3);\r\n};\r\nconst fourDigit = (val) => {\r\n    return ('000' + (val !== undefined ? Math.abs(val) : '0')).slice(-4);\r\n};\r\nconst FORMAT_YYYY = 'YYYY';\r\nconst FORMAT_YY = 'YY';\r\nconst FORMAT_MMMM = 'MMMM';\r\nconst FORMAT_MMM = 'MMM';\r\nconst FORMAT_MM = 'MM';\r\nconst FORMAT_M = 'M';\r\nconst FORMAT_DDDD = 'DDDD';\r\nconst FORMAT_DDD = 'DDD';\r\nconst FORMAT_DD = 'DD';\r\nconst FORMAT_D = 'D';\r\nconst FORMAT_HH = 'HH';\r\nconst FORMAT_H = 'H';\r\nconst FORMAT_hh = 'hh';\r\nconst FORMAT_h = 'h';\r\nconst FORMAT_mm = 'mm';\r\nconst FORMAT_m = 'm';\r\nconst FORMAT_ss = 'ss';\r\nconst FORMAT_s = 's';\r\nconst FORMAT_A = 'A';\r\nconst FORMAT_a = 'a';\r\nconst FORMAT_KEYS = [\r\n    { f: FORMAT_YYYY, k: 'year' },\r\n    { f: FORMAT_MMMM, k: 'month' },\r\n    { f: FORMAT_DDDD, k: 'day' },\r\n    { f: FORMAT_MMM, k: 'month' },\r\n    { f: FORMAT_DDD, k: 'day' },\r\n    { f: FORMAT_YY, k: 'year' },\r\n    { f: FORMAT_MM, k: 'month' },\r\n    { f: FORMAT_DD, k: 'day' },\r\n    { f: FORMAT_HH, k: 'hour' },\r\n    { f: FORMAT_hh, k: 'hour' },\r\n    { f: FORMAT_mm, k: 'minute' },\r\n    { f: FORMAT_ss, k: 'second' },\r\n    { f: FORMAT_M, k: 'month' },\r\n    { f: FORMAT_D, k: 'day' },\r\n    { f: FORMAT_H, k: 'hour' },\r\n    { f: FORMAT_h, k: 'hour' },\r\n    { f: FORMAT_m, k: 'minute' },\r\n    { f: FORMAT_s, k: 'second' },\r\n    { f: FORMAT_A, k: 'ampm' },\r\n    { f: FORMAT_a, k: 'ampm' },\r\n];\r\nconst DAY_NAMES = [\r\n    'Sunday',\r\n    'Monday',\r\n    'Tuesday',\r\n    'Wednesday',\r\n    'Thursday',\r\n    'Friday',\r\n    'Saturday',\r\n];\r\nconst DAY_SHORT_NAMES = [\r\n    'Sun',\r\n    'Mon',\r\n    'Tue',\r\n    'Wed',\r\n    'Thu',\r\n    'Fri',\r\n    'Sat',\r\n];\r\nconst MONTH_NAMES = [\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December',\r\n];\r\nconst MONTH_SHORT_NAMES = [\r\n    'Jan',\r\n    'Feb',\r\n    'Mar',\r\n    'Apr',\r\n    'May',\r\n    'Jun',\r\n    'Jul',\r\n    'Aug',\r\n    'Sep',\r\n    'Oct',\r\n    'Nov',\r\n    'Dec',\r\n];\r\nconst VALID_AMPM_PREFIX = [\r\n    FORMAT_hh, FORMAT_h, FORMAT_mm, FORMAT_m, FORMAT_ss, FORMAT_s\r\n];\n\nconst Datetime = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.inputId = `ion-dt-${datetimeIds++}`;\n        this.locale = {};\n        this.datetimeMin = {};\n        this.datetimeMax = {};\n        this.datetimeValue = {};\n        this.isExpanded = false;\n        /**\n         * The name of the control, which is submitted with the form data.\n         */\n        this.name = this.inputId;\n        /**\n         * If `true`, the user cannot interact with the datetime.\n         */\n        this.disabled = false;\n        /**\n         * If `true`, the datetime appears normal but is not interactive.\n         */\n        this.readonly = false;\n        /**\n         * The display format of the date and time as text that shows\n         * within the item. When the `pickerFormat` input is not used, then the\n         * `displayFormat` is used for both display the formatted text, and determining\n         * the datetime picker's columns. See the `pickerFormat` input description for\n         * more info. Defaults to `MMM D, YYYY`.\n         */\n        this.displayFormat = 'MMM D, YYYY';\n        /**\n         * The text to display on the picker's cancel button.\n         */\n        this.cancelText = 'Cancel';\n        /**\n         * The text to display on the picker's \"Done\" button.\n         */\n        this.doneText = 'Done';\n        this.onClick = () => {\n            this.setFocus();\n            this.open();\n        };\n        this.onFocus = () => {\n            this.ionFocus.emit();\n        };\n        this.onBlur = () => {\n            this.ionBlur.emit();\n        };\n        this.ionCancel = createEvent(this, \"ionCancel\", 7);\n        this.ionChange = createEvent(this, \"ionChange\", 7);\n        this.ionFocus = createEvent(this, \"ionFocus\", 7);\n        this.ionBlur = createEvent(this, \"ionBlur\", 7);\n        this.ionStyle = createEvent(this, \"ionStyle\", 7);\n    }\n    disabledChanged() {\n        this.emitStyle();\n    }\n    /**\n     * Update the datetime value when the value changes\n     */\n    valueChanged() {\n        this.updateDatetimeValue(this.value);\n        this.emitStyle();\n        this.ionChange.emit({\n            value: this.value\n        });\n    }\n    componentWillLoad() {\n        // first see if locale names were provided in the inputs\n        // then check to see if they're in the config\n        // if neither were provided then it will use default English names\n        this.locale = {\n            // this.locale[type] = convertToArrayOfStrings((this[type] ? this[type] : this.config.get(type), type);\n            monthNames: convertToArrayOfStrings(this.monthNames, 'monthNames'),\n            monthShortNames: convertToArrayOfStrings(this.monthShortNames, 'monthShortNames'),\n            dayNames: convertToArrayOfStrings(this.dayNames, 'dayNames'),\n            dayShortNames: convertToArrayOfStrings(this.dayShortNames, 'dayShortNames')\n        };\n        this.updateDatetimeValue(this.value);\n        this.emitStyle();\n    }\n    /**\n     * Opens the datetime overlay.\n     */\n    async open() {\n        if (this.disabled || this.isExpanded) {\n            return;\n        }\n        const pickerOptions = this.generatePickerOptions();\n        const picker = await pickerController.create(pickerOptions);\n        this.isExpanded = true;\n        picker.onDidDismiss().then(() => {\n            this.isExpanded = false;\n            this.setFocus();\n        });\n        picker.addEventListener('ionPickerColChange', async (event) => {\n            const data = event.detail;\n            const colSelectedIndex = data.selectedIndex;\n            const colOptions = data.options;\n            const changeData = {};\n            changeData[data.name] = {\n                value: colOptions[colSelectedIndex].value\n            };\n            if (data.name !== 'ampm' && this.datetimeValue.ampm !== undefined) {\n                changeData['ampm'] = {\n                    value: this.datetimeValue.ampm\n                };\n            }\n            this.updateDatetimeValue(changeData);\n            picker.columns = this.generateColumns();\n        });\n        await picker.present();\n    }\n    emitStyle() {\n        this.ionStyle.emit({\n            'interactive': true,\n            'datetime': true,\n            'has-placeholder': this.placeholder != null,\n            'has-value': this.hasValue(),\n            'interactive-disabled': this.disabled,\n        });\n    }\n    updateDatetimeValue(value) {\n        updateDate(this.datetimeValue, value);\n    }\n    generatePickerOptions() {\n        const mode = getIonMode(this);\n        const pickerOptions = Object.assign(Object.assign({ mode }, this.pickerOptions), { columns: this.generateColumns() });\n        // If the user has not passed in picker buttons,\n        // add a cancel and ok button to the picker\n        const buttons = pickerOptions.buttons;\n        if (!buttons || buttons.length === 0) {\n            pickerOptions.buttons = [\n                {\n                    text: this.cancelText,\n                    role: 'cancel',\n                    handler: () => {\n                        this.updateDatetimeValue(this.value);\n                        this.ionCancel.emit();\n                    }\n                },\n                {\n                    text: this.doneText,\n                    handler: (data) => {\n                        this.updateDatetimeValue(data);\n                        /**\n                         * Prevent convertDataToISO from doing any\n                         * kind of transformation based on timezone\n                         * This cancels out any change it attempts to make\n                         *\n                         * Important: Take the timezone offset based on\n                         * the date that is currently selected, otherwise\n                         * there can be 1 hr difference when dealing w/ DST\n                         */\n                        const date = new Date(convertDataToISO(this.datetimeValue));\n                        this.datetimeValue.tzOffset = date.getTimezoneOffset() * -1;\n                        this.value = convertDataToISO(this.datetimeValue);\n                    }\n                }\n            ];\n        }\n        return pickerOptions;\n    }\n    generateColumns() {\n        // if a picker format wasn't provided, then fallback\n        // to use the display format\n        let template = this.pickerFormat || this.displayFormat || DEFAULT_FORMAT;\n        if (template.length === 0) {\n            return [];\n        }\n        // make sure we've got up to date sizing information\n        this.calcMinMax();\n        // does not support selecting by day name\n        // automatically remove any day name formats\n        template = template.replace('DDDD', '{~}').replace('DDD', '{~}');\n        if (template.indexOf('D') === -1) {\n            // there is not a day in the template\n            // replace the day name with a numeric one if it exists\n            template = template.replace('{~}', 'D');\n        }\n        // make sure no day name replacer is left in the string\n        template = template.replace(/{~}/g, '');\n        // parse apart the given template into an array of \"formats\"\n        const columns = parseTemplate(template).map((format) => {\n            // loop through each format in the template\n            // create a new picker column to build up with data\n            const key = convertFormatToKey(format);\n            let values;\n            // check if they have exact values to use for this date part\n            // otherwise use the default date part values\n            const self = this;\n            values = self[key + 'Values']\n                ? convertToArrayOfNumbers(self[key + 'Values'], key)\n                : dateValueRange(format, this.datetimeMin, this.datetimeMax);\n            const colOptions = values.map(val => {\n                return {\n                    value: val,\n                    text: renderTextFormat(format, val, undefined, this.locale),\n                };\n            });\n            // cool, we've loaded up the columns with options\n            // preselect the option for this column\n            const optValue = getDateValue(this.datetimeValue, format);\n            const selectedIndex = colOptions.findIndex(opt => opt.value === optValue);\n            return {\n                name: key,\n                selectedIndex: selectedIndex >= 0 ? selectedIndex : 0,\n                options: colOptions\n            };\n        });\n        // Normalize min/max\n        const min = this.datetimeMin;\n        const max = this.datetimeMax;\n        ['month', 'day', 'hour', 'minute']\n            .filter(name => !columns.find(column => column.name === name))\n            .forEach(name => {\n            min[name] = 0;\n            max[name] = 0;\n        });\n        return this.validateColumns(divyColumns(columns));\n    }\n    validateColumns(columns) {\n        const today = new Date();\n        const minCompareVal = dateDataSortValue(this.datetimeMin);\n        const maxCompareVal = dateDataSortValue(this.datetimeMax);\n        const yearCol = columns.find(c => c.name === 'year');\n        let selectedYear = today.getFullYear();\n        if (yearCol) {\n            // default to the first value if the current year doesn't exist in the options\n            if (!yearCol.options.find(col => col.value === today.getFullYear())) {\n                selectedYear = yearCol.options[0].value;\n            }\n            const selectedIndex = yearCol.selectedIndex;\n            if (selectedIndex !== undefined) {\n                const yearOpt = yearCol.options[selectedIndex];\n                if (yearOpt) {\n                    // they have a selected year value\n                    selectedYear = yearOpt.value;\n                }\n            }\n        }\n        const selectedMonth = this.validateColumn(columns, 'month', 1, minCompareVal, maxCompareVal, [selectedYear, 0, 0, 0, 0], [selectedYear, 12, 31, 23, 59]);\n        const numDaysInMonth = daysInMonth(selectedMonth, selectedYear);\n        const selectedDay = this.validateColumn(columns, 'day', 2, minCompareVal, maxCompareVal, [selectedYear, selectedMonth, 0, 0, 0], [selectedYear, selectedMonth, numDaysInMonth, 23, 59]);\n        const selectedHour = this.validateColumn(columns, 'hour', 3, minCompareVal, maxCompareVal, [selectedYear, selectedMonth, selectedDay, 0, 0], [selectedYear, selectedMonth, selectedDay, 23, 59]);\n        this.validateColumn(columns, 'minute', 4, minCompareVal, maxCompareVal, [selectedYear, selectedMonth, selectedDay, selectedHour, 0], [selectedYear, selectedMonth, selectedDay, selectedHour, 59]);\n        return columns;\n    }\n    calcMinMax() {\n        const todaysYear = new Date().getFullYear();\n        if (this.yearValues !== undefined) {\n            const years = convertToArrayOfNumbers(this.yearValues, 'year');\n            if (this.min === undefined) {\n                this.min = Math.min(...years).toString();\n            }\n            if (this.max === undefined) {\n                this.max = Math.max(...years).toString();\n            }\n        }\n        else {\n            if (this.min === undefined) {\n                this.min = (todaysYear - 100).toString();\n            }\n            if (this.max === undefined) {\n                this.max = todaysYear.toString();\n            }\n        }\n        const min = this.datetimeMin = parseDate(this.min);\n        const max = this.datetimeMax = parseDate(this.max);\n        min.year = min.year || todaysYear;\n        max.year = max.year || todaysYear;\n        min.month = min.month || 1;\n        max.month = max.month || 12;\n        min.day = min.day || 1;\n        max.day = max.day || 31;\n        min.hour = min.hour || 0;\n        max.hour = max.hour || 23;\n        min.minute = min.minute || 0;\n        max.minute = max.minute || 59;\n        min.second = min.second || 0;\n        max.second = max.second || 59;\n        // Ensure min/max constraints\n        if (min.year > max.year) {\n            console.error('min.year > max.year');\n            min.year = max.year - 100;\n        }\n        if (min.year === max.year) {\n            if (min.month > max.month) {\n                console.error('min.month > max.month');\n                min.month = 1;\n            }\n            else if (min.month === max.month && min.day > max.day) {\n                console.error('min.day > max.day');\n                min.day = 1;\n            }\n        }\n    }\n    validateColumn(columns, name, index, min, max, lowerBounds, upperBounds) {\n        const column = columns.find(c => c.name === name);\n        if (!column) {\n            return 0;\n        }\n        const lb = lowerBounds.slice();\n        const ub = upperBounds.slice();\n        const options = column.options;\n        let indexMin = options.length - 1;\n        let indexMax = 0;\n        for (let i = 0; i < options.length; i++) {\n            const opts = options[i];\n            const value = opts.value;\n            lb[index] = opts.value;\n            ub[index] = opts.value;\n            const disabled = opts.disabled = (value < lowerBounds[index] ||\n                value > upperBounds[index] ||\n                dateSortValue(ub[0], ub[1], ub[2], ub[3], ub[4]) < min ||\n                dateSortValue(lb[0], lb[1], lb[2], lb[3], lb[4]) > max);\n            if (!disabled) {\n                indexMin = Math.min(indexMin, i);\n                indexMax = Math.max(indexMax, i);\n            }\n        }\n        const selectedIndex = column.selectedIndex = clamp(indexMin, column.selectedIndex, indexMax);\n        const opt = column.options[selectedIndex];\n        if (opt) {\n            return opt.value;\n        }\n        return 0;\n    }\n    get text() {\n        // create the text of the formatted data\n        const template = this.displayFormat || this.pickerFormat || DEFAULT_FORMAT;\n        if (this.value === undefined ||\n            this.value === null ||\n            this.value.length === 0) {\n            return;\n        }\n        return renderDatetime(template, this.datetimeValue, this.locale);\n    }\n    hasValue() {\n        return this.text !== undefined;\n    }\n    setFocus() {\n        if (this.buttonEl) {\n            this.buttonEl.focus();\n        }\n    }\n    render() {\n        const { inputId, text, disabled, readonly, isExpanded, el, placeholder } = this;\n        const mode = getIonMode(this);\n        const labelId = inputId + '-lbl';\n        const label = findItemLabel(el);\n        const addPlaceholderClass = (text === undefined && placeholder != null) ? true : false;\n        // If selected text has been passed in, use that first\n        // otherwise use the placeholder\n        const datetimeText = text === undefined\n            ? (placeholder != null ? placeholder : '')\n            : text;\n        if (label) {\n            label.id = labelId;\n        }\n        renderHiddenInput(true, el, this.name, this.value, this.disabled);\n        return (h(Host, { onClick: this.onClick, role: \"combobox\", \"aria-disabled\": disabled ? 'true' : null, \"aria-expanded\": `${isExpanded}`, \"aria-haspopup\": \"true\", \"aria-labelledby\": labelId, class: {\n                [mode]: true,\n                'datetime-disabled': disabled,\n                'datetime-readonly': readonly,\n                'datetime-placeholder': addPlaceholderClass,\n                'in-item': hostContext('ion-item', el)\n            } }, h(\"div\", { class: \"datetime-text\" }, datetimeText), h(\"button\", { type: \"button\", onFocus: this.onFocus, onBlur: this.onBlur, disabled: this.disabled, ref: btnEl => this.buttonEl = btnEl })));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"disabled\": [\"disabledChanged\"],\n        \"value\": [\"valueChanged\"]\n    }; }\n    static get style() { return \":host{padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);display:-ms-flexbox;display:flex;position:relative;min-width:16px;min-height:1.2em;font-family:var(--ion-font-family,inherit);text-overflow:ellipsis;white-space:nowrap;overflow:hidden;z-index:2}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){:host{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}:host(.in-item){position:static}:host(.datetime-placeholder){color:var(--placeholder-color)}:host(.datetime-disabled){opacity:.3;pointer-events:none}:host(.datetime-readonly){pointer-events:none}button{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none}:host-context([dir=rtl]) button,[dir=rtl] button{left:unset;right:unset;right:0}button::-moz-focus-inner{border:0}.datetime-text{font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;-ms-flex:1;flex:1;min-height:inherit;direction:ltr;overflow:inherit}:host-context([dir=rtl]) .datetime-text,[dir=rtl] .datetime-text{direction:rtl}:host{--placeholder-color:var(--ion-color-step-400,#999);--padding-top:10px;--padding-end:8px;--padding-bottom:10px;--padding-start:16px}\"; }\n};\nconst divyColumns = (columns) => {\n    const columnsWidth = [];\n    let col;\n    let width;\n    for (let i = 0; i < columns.length; i++) {\n        col = columns[i];\n        columnsWidth.push(0);\n        for (const option of col.options) {\n            width = option.text.length;\n            if (width > columnsWidth[i]) {\n                columnsWidth[i] = width;\n            }\n        }\n    }\n    if (columnsWidth.length === 2) {\n        width = Math.max(columnsWidth[0], columnsWidth[1]);\n        columns[0].align = 'right';\n        columns[1].align = 'left';\n        columns[0].optionsWidth = columns[1].optionsWidth = `${width * 17}px`;\n    }\n    else if (columnsWidth.length === 3) {\n        width = Math.max(columnsWidth[0], columnsWidth[2]);\n        columns[0].align = 'right';\n        columns[1].columnWidth = `${columnsWidth[1] * 17}px`;\n        columns[0].optionsWidth = columns[2].optionsWidth = `${width * 17}px`;\n        columns[2].align = 'left';\n    }\n    return columns;\n};\nconst DEFAULT_FORMAT = 'MMM D, YYYY';\nlet datetimeIds = 0;\n\n/**\r\n * iOS Picker Enter Animation\r\n */\r\nconst iosEnterAnimation = (baseEl) => {\r\n    const baseAnimation = createAnimation();\r\n    const backdropAnimation = createAnimation();\r\n    const wrapperAnimation = createAnimation();\r\n    backdropAnimation\r\n        .addElement(baseEl.querySelector('ion-backdrop'))\r\n        .fromTo('opacity', 0.01, 0.26);\r\n    wrapperAnimation\r\n        .addElement(baseEl.querySelector('.picker-wrapper'))\r\n        .fromTo('transform', 'translateY(100%)', 'translateY(0%)');\r\n    return baseAnimation\r\n        .addElement(baseEl)\r\n        .easing('cubic-bezier(.36,.66,.04,1)')\r\n        .duration(400)\r\n        .addAnimation([backdropAnimation, wrapperAnimation]);\r\n};\n\n/**\r\n * iOS Picker Leave Animation\r\n */\r\nconst iosLeaveAnimation = (baseEl) => {\r\n    const baseAnimation = createAnimation();\r\n    const backdropAnimation = createAnimation();\r\n    const wrapperAnimation = createAnimation();\r\n    backdropAnimation\r\n        .addElement(baseEl.querySelector('ion-backdrop'))\r\n        .fromTo('opacity', 0.26, 0.01);\r\n    wrapperAnimation\r\n        .addElement(baseEl.querySelector('.picker-wrapper'))\r\n        .fromTo('transform', 'translateY(0%)', 'translateY(100%)');\r\n    return baseAnimation\r\n        .addElement(baseEl)\r\n        .easing('cubic-bezier(.36,.66,.04,1)')\r\n        .duration(400)\r\n        .addAnimation([backdropAnimation, wrapperAnimation]);\r\n};\n\nconst Picker = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.mode = getIonMode(this);\n        this.presented = false;\n        /**\n         * If `true`, the keyboard will be automatically dismissed when the overlay is presented.\n         */\n        this.keyboardClose = true;\n        /**\n         * Array of buttons to be displayed at the top of the picker.\n         */\n        this.buttons = [];\n        /**\n         * Array of columns to be displayed in the picker.\n         */\n        this.columns = [];\n        /**\n         * Number of milliseconds to wait before dismissing the picker.\n         */\n        this.duration = 0;\n        /**\n         * If `true`, a backdrop will be displayed behind the picker.\n         */\n        this.showBackdrop = true;\n        /**\n         * If `true`, the picker will be dismissed when the backdrop is clicked.\n         */\n        this.backdropDismiss = true;\n        /**\n         * If `true`, the picker will animate.\n         */\n        this.animated = true;\n        this.onBackdropTap = () => {\n            const cancelBtn = this.buttons.find(b => b.role === 'cancel');\n            if (cancelBtn) {\n                this.buttonClick(cancelBtn);\n            }\n            else {\n                this.dismiss();\n            }\n        };\n        prepareOverlay(this.el);\n        this.didPresent = createEvent(this, \"ionPickerDidPresent\", 7);\n        this.willPresent = createEvent(this, \"ionPickerWillPresent\", 7);\n        this.willDismiss = createEvent(this, \"ionPickerWillDismiss\", 7);\n        this.didDismiss = createEvent(this, \"ionPickerDidDismiss\", 7);\n    }\n    /**\n     * Present the picker overlay after it has been created.\n     */\n    async present() {\n        await present(this, 'pickerEnter', iosEnterAnimation, iosEnterAnimation, undefined);\n        if (this.duration > 0) {\n            this.durationTimeout = setTimeout(() => this.dismiss(), this.duration);\n        }\n    }\n    /**\n     * Dismiss the picker overlay after it has been presented.\n     *\n     * @param data Any data to emit in the dismiss events.\n     * @param role The role of the element that is dismissing the picker.\n     * This can be useful in a button handler for determining which button was\n     * clicked to dismiss the picker.\n     * Some examples include: ``\"cancel\"`, `\"destructive\"`, \"selected\"`, and `\"backdrop\"`.\n     */\n    dismiss(data, role) {\n        if (this.durationTimeout) {\n            clearTimeout(this.durationTimeout);\n        }\n        return dismiss(this, data, role, 'pickerLeave', iosLeaveAnimation, iosLeaveAnimation);\n    }\n    /**\n     * Returns a promise that resolves when the picker did dismiss.\n     */\n    onDidDismiss() {\n        return eventMethod(this.el, 'ionPickerDidDismiss');\n    }\n    /**\n     * Returns a promise that resolves when the picker will dismiss.\n     */\n    onWillDismiss() {\n        return eventMethod(this.el, 'ionPickerWillDismiss');\n    }\n    /**\n     * Get the column that matches the specified name.\n     *\n     * @param name The name of the column.\n     */\n    getColumn(name) {\n        return Promise.resolve(this.columns.find(column => column.name === name));\n    }\n    buttonClick(button) {\n        // if (this.disabled) {\n        //   return;\n        // }\n        // keep the time of the most recent button click\n        // a handler has been provided, execute it\n        // pass the handler the values from the inputs\n        const shouldDismiss = safeCall(button.handler, this.getSelected()) !== false;\n        if (shouldDismiss) {\n            return this.dismiss();\n        }\n        return Promise.resolve(false);\n    }\n    getSelected() {\n        const selected = {};\n        this.columns.forEach((col, index) => {\n            const selectedColumn = col.selectedIndex !== undefined\n                ? col.options[col.selectedIndex]\n                : undefined;\n            selected[col.name] = {\n                text: selectedColumn ? selectedColumn.text : undefined,\n                value: selectedColumn ? selectedColumn.value : undefined,\n                columnIndex: index\n            };\n        });\n        return selected;\n    }\n    render() {\n        const mode = getIonMode(this);\n        return (h(Host, { \"aria-modal\": \"true\", class: Object.assign({ [mode]: true,\n                // Used internally for styling\n                [`picker-${mode}`]: true }, getClassMap(this.cssClass)), style: {\n                zIndex: `${20000 + this.overlayIndex}`\n            }, onIonBackdropTap: this.onBackdropTap }, h(\"ion-backdrop\", { visible: this.showBackdrop, tappable: this.backdropDismiss }), h(\"div\", { class: \"picker-wrapper\", role: \"dialog\" }, h(\"div\", { class: \"picker-toolbar\" }, this.buttons.map(b => (h(\"div\", { class: buttonWrapperClass(b) }, h(\"button\", { type: \"button\", onClick: () => this.buttonClick(b), class: buttonClass(b) }, b.text))))), h(\"div\", { class: \"picker-columns\" }, h(\"div\", { class: \"picker-above-highlight\" }), this.presented && this.columns.map(c => h(\"ion-picker-column\", { col: c })), h(\"div\", { class: \"picker-below-highlight\" })))));\n    }\n    get el() { return getElement(this); }\n    static get style() { return \".sc-ion-picker-ios-h{--border-radius:0;--border-style:solid;--min-width:auto;--width:100%;--max-width:500px;--min-height:auto;--max-height:auto;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;left:0;top:0;display:block;position:absolute;width:100%;height:100%;font-family:var(--ion-font-family,inherit);contain:strict;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:1001}[dir=rtl].sc-ion-picker-ios-h, [dir=rtl] .sc-ion-picker-ios-h{left:unset;right:unset;right:0}.overlay-hidden.sc-ion-picker-ios-h{display:none}.picker-wrapper.sc-ion-picker-ios{border-radius:var(--border-radius);left:0;right:0;bottom:0;margin-left:auto;margin-right:auto;margin-top:auto;margin-bottom:auto;-webkit-transform:translate3d(0,100%,0);transform:translate3d(0,100%,0);display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:column;flex-direction:column;width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);background:var(--background);contain:strict;overflow:hidden;z-index:10}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){.picker-wrapper.sc-ion-picker-ios{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}.picker-toolbar.sc-ion-picker-ios{width:100%;background:transparent;contain:strict;z-index:1}.picker-button.sc-ion-picker-ios{border:0;font-family:inherit}.picker-button.sc-ion-picker-ios:active, .picker-button.sc-ion-picker-ios:focus{outline:none}.picker-columns.sc-ion-picker-ios{display:-ms-flexbox;display:flex;position:relative;-ms-flex-pack:center;justify-content:center;margin-bottom:var(--ion-safe-area-bottom,0);contain:strict;direction:ltr;overflow:hidden}.picker-above-highlight.sc-ion-picker-ios, .picker-below-highlight.sc-ion-picker-ios{display:none;pointer-events:none}.sc-ion-picker-ios-h{--background:var(--ion-background-color,#fff);--border-width:1px 0 0;--border-color:var(--ion-item-border-color,var(--ion-border-color,var(--ion-color-step-250,#c8c7cc)));--height:260px;color:var(--ion-item-color,var(--ion-text-color,#000))}.picker-toolbar.sc-ion-picker-ios{display:-ms-flexbox;display:flex;height:44px;border-bottom:.55px solid var(--border-color)}.picker-toolbar-button.sc-ion-picker-ios{-ms-flex:1;flex:1;text-align:end}.picker-toolbar-button.sc-ion-picker-ios:last-child .picker-button.sc-ion-picker-ios{font-weight:600}.picker-toolbar-button.sc-ion-picker-ios:first-child{font-weight:400;text-align:start}.picker-button.sc-ion-picker-ios, .picker-button.activated.sc-ion-picker-ios{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:1em;padding-right:1em;padding-top:0;padding-bottom:0;height:44px;background:transparent;color:var(--ion-color-primary,#3880ff);font-size:16px}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){.picker-button.sc-ion-picker-ios, .picker-button.activated.sc-ion-picker-ios{padding-left:unset;padding-right:unset;-webkit-padding-start:1em;padding-inline-start:1em;-webkit-padding-end:1em;padding-inline-end:1em}}.picker-columns.sc-ion-picker-ios{height:215px;-webkit-perspective:1000px;perspective:1000px}.picker-above-highlight.sc-ion-picker-ios{left:0;top:0;-webkit-transform:translateZ(90px);transform:translateZ(90px);display:block;position:absolute;width:100%;height:81px;border-bottom:1px solid var(--border-color);background:-webkit-gradient(linear,left top,left bottom,color-stop(20%,var(--background,var(--ion-background-color,#fff))),to(rgba(var(--background-rgb,var(--ion-background-color-rgb,255,255,255)),.8)));background:linear-gradient(180deg,var(--background,var(--ion-background-color,#fff)) 20%,rgba(var(--background-rgb,var(--ion-background-color-rgb,255,255,255)),.8));z-index:10}[dir=rtl].sc-ion-picker-ios-h .picker-above-highlight.sc-ion-picker-ios, [dir=rtl] .sc-ion-picker-ios-h .picker-above-highlight.sc-ion-picker-ios, [dir=rtl].sc-ion-picker-ios .picker-above-highlight.sc-ion-picker-ios{left:unset;right:unset;right:0}.picker-below-highlight.sc-ion-picker-ios{left:0;top:115px;-webkit-transform:translateZ(90px);transform:translateZ(90px);display:block;position:absolute;width:100%;height:119px;border-top:1px solid var(--border-color);background:-webkit-gradient(linear,left bottom,left top,color-stop(30%,var(--background,var(--ion-background-color,#fff))),to(rgba(var(--background-rgb,var(--ion-background-color-rgb,255,255,255)),.8)));background:linear-gradient(0deg,var(--background,var(--ion-background-color,#fff)) 30%,rgba(var(--background-rgb,var(--ion-background-color-rgb,255,255,255)),.8));z-index:11}[dir=rtl].sc-ion-picker-ios-h .picker-below-highlight.sc-ion-picker-ios, [dir=rtl] .sc-ion-picker-ios-h .picker-below-highlight.sc-ion-picker-ios, [dir=rtl].sc-ion-picker-ios .picker-below-highlight.sc-ion-picker-ios{left:unset;right:unset;right:0}\"; }\n};\nconst buttonWrapperClass = (button) => {\n    return {\n        [`picker-toolbar-${button.role}`]: button.role !== undefined,\n        'picker-toolbar-button': true\n    };\n};\nconst buttonClass = (button) => {\n    return Object.assign({ 'picker-button': true, 'ion-activatable': true }, getClassMap(button.cssClass));\n};\n\nconst PickerColumnCmp = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.optHeight = 0;\n        this.rotateFactor = 0;\n        this.scaleFactor = 1;\n        this.velocity = 0;\n        this.y = 0;\n        this.noAnimate = true;\n        this.ionPickerColChange = createEvent(this, \"ionPickerColChange\", 7);\n    }\n    colChanged() {\n        this.refresh();\n    }\n    async connectedCallback() {\n        let pickerRotateFactor = 0;\n        let pickerScaleFactor = 0.81;\n        const mode = getIonMode(this);\n        if (mode === 'ios') {\n            pickerRotateFactor = -0.46;\n            pickerScaleFactor = 1;\n        }\n        this.rotateFactor = pickerRotateFactor;\n        this.scaleFactor = pickerScaleFactor;\n        this.gesture = (await import('./index-624eea58.js')).createGesture({\n            el: this.el,\n            gestureName: 'picker-swipe',\n            gesturePriority: 100,\n            threshold: 0,\n            onStart: ev => this.onStart(ev),\n            onMove: ev => this.onMove(ev),\n            onEnd: ev => this.onEnd(ev),\n        });\n        this.gesture.setDisabled(false);\n        this.tmrId = setTimeout(() => {\n            this.noAnimate = false;\n            this.refresh(true);\n        }, 250);\n    }\n    componentDidLoad() {\n        const colEl = this.optsEl;\n        if (colEl) {\n            // DOM READ\n            // We perfom a DOM read over a rendered item, this needs to happen after the first render\n            this.optHeight = (colEl.firstElementChild ? colEl.firstElementChild.clientHeight : 0);\n        }\n        this.refresh();\n    }\n    disconnectedCallback() {\n        cancelAnimationFrame(this.rafId);\n        clearTimeout(this.tmrId);\n        if (this.gesture) {\n            this.gesture.destroy();\n            this.gesture = undefined;\n        }\n    }\n    emitColChange() {\n        this.ionPickerColChange.emit(this.col);\n    }\n    setSelected(selectedIndex, duration) {\n        // if there is a selected index, then figure out it's y position\n        // if there isn't a selected index, then just use the top y position\n        const y = (selectedIndex > -1) ? -(selectedIndex * this.optHeight) : 0;\n        this.velocity = 0;\n        // set what y position we're at\n        cancelAnimationFrame(this.rafId);\n        this.update(y, duration, true);\n        this.emitColChange();\n    }\n    update(y, duration, saveY) {\n        if (!this.optsEl) {\n            return;\n        }\n        // ensure we've got a good round number :)\n        let translateY = 0;\n        let translateZ = 0;\n        const { col, rotateFactor } = this;\n        const selectedIndex = col.selectedIndex = this.indexForY(-y);\n        const durationStr = (duration === 0) ? '' : duration + 'ms';\n        const scaleStr = `scale(${this.scaleFactor})`;\n        const children = this.optsEl.children;\n        for (let i = 0; i < children.length; i++) {\n            const button = children[i];\n            const opt = col.options[i];\n            const optOffset = (i * this.optHeight) + y;\n            let transform = '';\n            if (rotateFactor !== 0) {\n                const rotateX = optOffset * rotateFactor;\n                if (Math.abs(rotateX) <= 90) {\n                    translateY = 0;\n                    translateZ = 90;\n                    transform = `rotateX(${rotateX}deg) `;\n                }\n                else {\n                    translateY = -9999;\n                }\n            }\n            else {\n                translateZ = 0;\n                translateY = optOffset;\n            }\n            const selected = selectedIndex === i;\n            transform += `translate3d(0px,${translateY}px,${translateZ}px) `;\n            if (this.scaleFactor !== 1 && !selected) {\n                transform += scaleStr;\n            }\n            // Update transition duration\n            if (this.noAnimate) {\n                opt.duration = 0;\n                button.style.transitionDuration = '';\n            }\n            else if (duration !== opt.duration) {\n                opt.duration = duration;\n                button.style.transitionDuration = durationStr;\n            }\n            // Update transform\n            if (transform !== opt.transform) {\n                opt.transform = transform;\n                button.style.transform = transform;\n            }\n            // Update selected item\n            if (selected !== opt.selected) {\n                opt.selected = selected;\n                if (selected) {\n                    button.classList.add(PICKER_OPT_SELECTED);\n                }\n                else {\n                    button.classList.remove(PICKER_OPT_SELECTED);\n                }\n            }\n        }\n        this.col.prevSelected = selectedIndex;\n        if (saveY) {\n            this.y = y;\n        }\n        if (this.lastIndex !== selectedIndex) {\n            // have not set a last index yet\n            hapticSelectionChanged();\n            this.lastIndex = selectedIndex;\n        }\n    }\n    decelerate() {\n        if (this.velocity !== 0) {\n            // still decelerating\n            this.velocity *= DECELERATION_FRICTION;\n            // do not let it go slower than a velocity of 1\n            this.velocity = (this.velocity > 0)\n                ? Math.max(this.velocity, 1)\n                : Math.min(this.velocity, -1);\n            let y = this.y + this.velocity;\n            if (y > this.minY) {\n                // whoops, it's trying to scroll up farther than the options we have!\n                y = this.minY;\n                this.velocity = 0;\n            }\n            else if (y < this.maxY) {\n                // gahh, it's trying to scroll down farther than we can!\n                y = this.maxY;\n                this.velocity = 0;\n            }\n            this.update(y, 0, true);\n            const notLockedIn = (Math.round(y) % this.optHeight !== 0) || (Math.abs(this.velocity) > 1);\n            if (notLockedIn) {\n                // isn't locked in yet, keep decelerating until it is\n                this.rafId = requestAnimationFrame(() => this.decelerate());\n            }\n            else {\n                this.velocity = 0;\n                this.emitColChange();\n            }\n        }\n        else if (this.y % this.optHeight !== 0) {\n            // needs to still get locked into a position so options line up\n            const currentPos = Math.abs(this.y % this.optHeight);\n            // create a velocity in the direction it needs to scroll\n            this.velocity = (currentPos > (this.optHeight / 2) ? 1 : -1);\n            this.decelerate();\n        }\n    }\n    indexForY(y) {\n        return Math.min(Math.max(Math.abs(Math.round(y / this.optHeight)), 0), this.col.options.length - 1);\n    }\n    // TODO should this check disabled?\n    onStart(detail) {\n        // We have to prevent default in order to block scrolling under the picker\n        // but we DO NOT have to stop propagation, since we still want\n        // some \"click\" events to capture\n        detail.event.preventDefault();\n        detail.event.stopPropagation();\n        // reset everything\n        cancelAnimationFrame(this.rafId);\n        const options = this.col.options;\n        let minY = (options.length - 1);\n        let maxY = 0;\n        for (let i = 0; i < options.length; i++) {\n            if (!options[i].disabled) {\n                minY = Math.min(minY, i);\n                maxY = Math.max(maxY, i);\n            }\n        }\n        this.minY = -(minY * this.optHeight);\n        this.maxY = -(maxY * this.optHeight);\n    }\n    onMove(detail) {\n        detail.event.preventDefault();\n        detail.event.stopPropagation();\n        // update the scroll position relative to pointer start position\n        let y = this.y + detail.deltaY;\n        if (y > this.minY) {\n            // scrolling up higher than scroll area\n            y = Math.pow(y, 0.8);\n            this.bounceFrom = y;\n        }\n        else if (y < this.maxY) {\n            // scrolling down below scroll area\n            y += Math.pow(this.maxY - y, 0.9);\n            this.bounceFrom = y;\n        }\n        else {\n            this.bounceFrom = 0;\n        }\n        this.update(y, 0, false);\n    }\n    onEnd(detail) {\n        if (this.bounceFrom > 0) {\n            // bounce back up\n            this.update(this.minY, 100, true);\n            this.emitColChange();\n            return;\n        }\n        else if (this.bounceFrom < 0) {\n            // bounce back down\n            this.update(this.maxY, 100, true);\n            this.emitColChange();\n            return;\n        }\n        this.velocity = clamp(-MAX_PICKER_SPEED, detail.velocityY * 23, MAX_PICKER_SPEED);\n        if (this.velocity === 0 && detail.deltaY === 0) {\n            const opt = detail.event.target.closest('.picker-opt');\n            if (opt && opt.hasAttribute('opt-index')) {\n                this.setSelected(parseInt(opt.getAttribute('opt-index'), 10), TRANSITION_DURATION);\n            }\n        }\n        else {\n            this.y += detail.deltaY;\n            this.decelerate();\n        }\n    }\n    refresh(forceRefresh) {\n        let min = this.col.options.length - 1;\n        let max = 0;\n        const options = this.col.options;\n        for (let i = 0; i < options.length; i++) {\n            if (!options[i].disabled) {\n                min = Math.min(min, i);\n                max = Math.max(max, i);\n            }\n        }\n        /**\n         * Only update selected value if column has a\n         * velocity of 0. If it does not, then the\n         * column is animating might land on\n         * a value different than the value at\n         * selectedIndex\n         */\n        if (this.velocity !== 0) {\n            return;\n        }\n        const selectedIndex = clamp(min, this.col.selectedIndex || 0, max);\n        if (this.col.prevSelected !== selectedIndex || forceRefresh) {\n            const y = (selectedIndex * this.optHeight) * -1;\n            this.velocity = 0;\n            this.update(y, TRANSITION_DURATION, true);\n        }\n    }\n    render() {\n        const col = this.col;\n        const Button = 'button';\n        const mode = getIonMode(this);\n        return (h(Host, { class: {\n                [mode]: true,\n                'picker-col': true,\n                'picker-opts-left': this.col.align === 'left',\n                'picker-opts-right': this.col.align === 'right'\n            }, style: {\n                'max-width': this.col.columnWidth\n            } }, col.prefix && (h(\"div\", { class: \"picker-prefix\", style: { width: col.prefixWidth } }, col.prefix)), h(\"div\", { class: \"picker-opts\", style: { maxWidth: col.optionsWidth }, ref: el => this.optsEl = el }, col.options.map((o, index) => h(Button, { type: \"button\", class: { 'picker-opt': true, 'picker-opt-disabled': !!o.disabled }, \"opt-index\": index }, o.text))), col.suffix && (h(\"div\", { class: \"picker-suffix\", style: { width: col.suffixWidth } }, col.suffix))));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"col\": [\"colChanged\"]\n    }; }\n    static get style() { return \".picker-col{display:-ms-flexbox;display:flex;position:relative;-ms-flex:1;flex:1;-ms-flex-pack:center;justify-content:center;height:100%;-webkit-box-sizing:content-box;box-sizing:content-box;contain:content}.picker-opts{position:relative;-ms-flex:1;flex:1;max-width:100%}.picker-opt{left:0;top:0;display:block;position:absolute;width:100%;border:0;text-align:center;text-overflow:ellipsis;white-space:nowrap;contain:strict;overflow:hidden;will-change:transform}:host-context([dir=rtl]) .picker-opt,[dir=rtl] .picker-opt{left:unset;right:unset;right:0}.picker-opt.picker-opt-disabled{pointer-events:none}.picker-opt-disabled{opacity:0}.picker-opts-left{-ms-flex-pack:start;justify-content:flex-start}.picker-opts-right{-ms-flex-pack:end;justify-content:flex-end}.picker-opt:active,.picker-opt:focus{outline:none}.picker-prefix{text-align:end}.picker-prefix,.picker-suffix{position:relative;-ms-flex:1;flex:1;white-space:nowrap}.picker-suffix{text-align:start}.picker-col{padding-left:4px;padding-right:4px;padding-top:0;padding-bottom:0;-webkit-transform-style:preserve-3d;transform-style:preserve-3d}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){.picker-col{padding-left:unset;padding-right:unset;-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:4px;padding-inline-end:4px}}.picker-opts,.picker-prefix,.picker-suffix{top:77px;pointer-events:none}.picker-opt,.picker-opts,.picker-prefix,.picker-suffix{-webkit-transform-style:preserve-3d;transform-style:preserve-3d;color:inherit;font-size:20px;line-height:42px}.picker-opt{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;-webkit-transform-origin:center center;transform-origin:center center;height:46px;-webkit-transition-timing-function:ease-out;transition-timing-function:ease-out;background:transparent;-webkit-backface-visibility:hidden;backface-visibility:hidden;pointer-events:auto}:host-context([dir=rtl]) .picker-opt,[dir=rtl] .picker-opt{-webkit-transform-origin:calc(100% - center) center;transform-origin:calc(100% - center) center}\"; }\n};\nconst PICKER_OPT_SELECTED = 'picker-opt-selected';\nconst DECELERATION_FRICTION = 0.97;\nconst MAX_PICKER_SPEED = 90;\nconst TRANSITION_DURATION = 150;\n\nexport { Datetime as ion_datetime, Picker as ion_picker, PickerColumnCmp as ion_picker_column };\n"]},"metadata":{},"sourceType":"module"}
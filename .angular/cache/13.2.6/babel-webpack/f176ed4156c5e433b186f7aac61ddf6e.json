{"ast":null,"code":"import _asyncToGenerator from \"/home/ivan/HACKUPC2022/Join/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n\nconst attachComponent = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* (delegate, container, component, cssClasses, componentProps) {\n    if (delegate) {\n      return delegate.attachViewToDom(container, component, componentProps, cssClasses);\n    }\n\n    if (typeof component !== 'string' && !(component instanceof HTMLElement)) {\n      throw new Error('framework delegate is missing');\n    }\n\n    const el = typeof component === 'string' ? container.ownerDocument && container.ownerDocument.createElement(component) : component;\n\n    if (cssClasses) {\n      cssClasses.forEach(c => el.classList.add(c));\n    }\n\n    if (componentProps) {\n      Object.assign(el, componentProps);\n    }\n\n    container.appendChild(el);\n\n    if (el.componentOnReady) {\n      yield el.componentOnReady();\n    }\n\n    return el;\n  });\n\n  return function attachComponent(_x, _x2, _x3, _x4, _x5) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nconst detachComponent = (delegate, element) => {\n  if (element) {\n    if (delegate) {\n      const container = element.parentElement;\n      return delegate.removeViewFromDom(container, element);\n    }\n\n    element.remove();\n  }\n\n  return Promise.resolve();\n};\n\nexport { attachComponent as a, detachComponent as d };","map":{"version":3,"sources":["/home/ivan/HACKUPC2022/Join/node_modules/ionic-mqtt/node_modules/@ionic/core/dist/esm/framework-delegate-c2e2e1f4.js"],"names":["attachComponent","delegate","container","component","cssClasses","componentProps","attachViewToDom","HTMLElement","Error","el","ownerDocument","createElement","forEach","c","classList","add","Object","assign","appendChild","componentOnReady","detachComponent","element","parentElement","removeViewFromDom","remove","Promise","resolve","a","d"],"mappings":";;AAAA,MAAMA,eAAe;AAAA,+BAAG,WAAOC,QAAP,EAAiBC,SAAjB,EAA4BC,SAA5B,EAAuCC,UAAvC,EAAmDC,cAAnD,EAAsE;AAC1F,QAAIJ,QAAJ,EAAc;AACV,aAAOA,QAAQ,CAACK,eAAT,CAAyBJ,SAAzB,EAAoCC,SAApC,EAA+CE,cAA/C,EAA+DD,UAA/D,CAAP;AACH;;AACD,QAAI,OAAOD,SAAP,KAAqB,QAArB,IAAiC,EAAEA,SAAS,YAAYI,WAAvB,CAArC,EAA0E;AACtE,YAAM,IAAIC,KAAJ,CAAU,+BAAV,CAAN;AACH;;AACD,UAAMC,EAAE,GAAI,OAAON,SAAP,KAAqB,QAAtB,GACLD,SAAS,CAACQ,aAAV,IAA2BR,SAAS,CAACQ,aAAV,CAAwBC,aAAxB,CAAsCR,SAAtC,CADtB,GAELA,SAFN;;AAGA,QAAIC,UAAJ,EAAgB;AACZA,MAAAA,UAAU,CAACQ,OAAX,CAAmBC,CAAC,IAAIJ,EAAE,CAACK,SAAH,CAAaC,GAAb,CAAiBF,CAAjB,CAAxB;AACH;;AACD,QAAIR,cAAJ,EAAoB;AAChBW,MAAAA,MAAM,CAACC,MAAP,CAAcR,EAAd,EAAkBJ,cAAlB;AACH;;AACDH,IAAAA,SAAS,CAACgB,WAAV,CAAsBT,EAAtB;;AACA,QAAIA,EAAE,CAACU,gBAAP,EAAyB;AACrB,YAAMV,EAAE,CAACU,gBAAH,EAAN;AACH;;AACD,WAAOV,EAAP;AACH,GArBoB;;AAAA,kBAAfT,eAAe;AAAA;AAAA;AAAA,GAArB;;AAsBA,MAAMoB,eAAe,GAAG,CAACnB,QAAD,EAAWoB,OAAX,KAAuB;AAC3C,MAAIA,OAAJ,EAAa;AACT,QAAIpB,QAAJ,EAAc;AACV,YAAMC,SAAS,GAAGmB,OAAO,CAACC,aAA1B;AACA,aAAOrB,QAAQ,CAACsB,iBAAT,CAA2BrB,SAA3B,EAAsCmB,OAAtC,CAAP;AACH;;AACDA,IAAAA,OAAO,CAACG,MAAR;AACH;;AACD,SAAOC,OAAO,CAACC,OAAR,EAAP;AACH,CATD;;AAWA,SAAS1B,eAAe,IAAI2B,CAA5B,EAA+BP,eAAe,IAAIQ,CAAlD","sourcesContent":["const attachComponent = async (delegate, container, component, cssClasses, componentProps) => {\r\n    if (delegate) {\r\n        return delegate.attachViewToDom(container, component, componentProps, cssClasses);\r\n    }\r\n    if (typeof component !== 'string' && !(component instanceof HTMLElement)) {\r\n        throw new Error('framework delegate is missing');\r\n    }\r\n    const el = (typeof component === 'string')\r\n        ? container.ownerDocument && container.ownerDocument.createElement(component)\r\n        : component;\r\n    if (cssClasses) {\r\n        cssClasses.forEach(c => el.classList.add(c));\r\n    }\r\n    if (componentProps) {\r\n        Object.assign(el, componentProps);\r\n    }\r\n    container.appendChild(el);\r\n    if (el.componentOnReady) {\r\n        await el.componentOnReady();\r\n    }\r\n    return el;\r\n};\r\nconst detachComponent = (delegate, element) => {\r\n    if (element) {\r\n        if (delegate) {\r\n            const container = element.parentElement;\r\n            return delegate.removeViewFromDom(container, element);\r\n        }\r\n        element.remove();\r\n    }\r\n    return Promise.resolve();\r\n};\n\nexport { attachComponent as a, detachComponent as d };\n"]},"metadata":{},"sourceType":"module"}
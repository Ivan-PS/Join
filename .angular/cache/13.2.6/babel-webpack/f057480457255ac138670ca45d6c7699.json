{"ast":null,"code":"import _asyncToGenerator from \"/home/ivan/HACKUPC2022/Join/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n\nconst startHardwareBackButton = () => {\n  const doc = document;\n  let busy = false;\n  doc.addEventListener('backbutton', () => {\n    if (busy) {\n      return;\n    }\n\n    const handlers = [];\n    const ev = new CustomEvent('ionBackButton', {\n      bubbles: false,\n      detail: {\n        register(priority, handler) {\n          handlers.push({\n            priority,\n            handler\n          });\n        }\n\n      }\n    });\n    doc.dispatchEvent(ev);\n\n    if (handlers.length > 0) {\n      let selectedPriority = Number.MIN_SAFE_INTEGER;\n      let selectedHandler;\n      handlers.forEach(({\n        priority,\n        handler\n      }) => {\n        if (priority >= selectedPriority) {\n          selectedPriority = priority;\n          selectedHandler = handler;\n        }\n      });\n      busy = true;\n      executeAction(selectedHandler).then(() => busy = false);\n    }\n  });\n};\n\nconst executeAction = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* (handler) {\n    try {\n      if (handler) {\n        const result = handler();\n\n        if (result != null) {\n          yield result;\n        }\n      }\n    } catch (e) {\n      console.error(e);\n    }\n  });\n\n  return function executeAction(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport { startHardwareBackButton };","map":{"version":3,"sources":["/home/ivan/HACKUPC2022/Join/node_modules/ionic-mqtt/node_modules/@ionic/core/dist/esm/hardware-back-button-5afe3cb0.js"],"names":["startHardwareBackButton","doc","document","busy","addEventListener","handlers","ev","CustomEvent","bubbles","detail","register","priority","handler","push","dispatchEvent","length","selectedPriority","Number","MIN_SAFE_INTEGER","selectedHandler","forEach","executeAction","then","result","e","console","error"],"mappings":";;AAAA,MAAMA,uBAAuB,GAAG,MAAM;AAClC,QAAMC,GAAG,GAAGC,QAAZ;AACA,MAAIC,IAAI,GAAG,KAAX;AACAF,EAAAA,GAAG,CAACG,gBAAJ,CAAqB,YAArB,EAAmC,MAAM;AACrC,QAAID,IAAJ,EAAU;AACN;AACH;;AACD,UAAME,QAAQ,GAAG,EAAjB;AACA,UAAMC,EAAE,GAAG,IAAIC,WAAJ,CAAgB,eAAhB,EAAiC;AACxCC,MAAAA,OAAO,EAAE,KAD+B;AAExCC,MAAAA,MAAM,EAAE;AACJC,QAAAA,QAAQ,CAACC,QAAD,EAAWC,OAAX,EAAoB;AACxBP,UAAAA,QAAQ,CAACQ,IAAT,CAAc;AAAEF,YAAAA,QAAF;AAAYC,YAAAA;AAAZ,WAAd;AACH;;AAHG;AAFgC,KAAjC,CAAX;AAQAX,IAAAA,GAAG,CAACa,aAAJ,CAAkBR,EAAlB;;AACA,QAAID,QAAQ,CAACU,MAAT,GAAkB,CAAtB,EAAyB;AACrB,UAAIC,gBAAgB,GAAGC,MAAM,CAACC,gBAA9B;AACA,UAAIC,eAAJ;AACAd,MAAAA,QAAQ,CAACe,OAAT,CAAiB,CAAC;AAAET,QAAAA,QAAF;AAAYC,QAAAA;AAAZ,OAAD,KAA2B;AACxC,YAAID,QAAQ,IAAIK,gBAAhB,EAAkC;AAC9BA,UAAAA,gBAAgB,GAAGL,QAAnB;AACAQ,UAAAA,eAAe,GAAGP,OAAlB;AACH;AACJ,OALD;AAMAT,MAAAA,IAAI,GAAG,IAAP;AACAkB,MAAAA,aAAa,CAACF,eAAD,CAAb,CAA+BG,IAA/B,CAAoC,MAAMnB,IAAI,GAAG,KAAjD;AACH;AACJ,GA1BD;AA2BH,CA9BD;;AA+BA,MAAMkB,aAAa;AAAA,+BAAG,WAAOT,OAAP,EAAmB;AACrC,QAAI;AACA,UAAIA,OAAJ,EAAa;AACT,cAAMW,MAAM,GAAGX,OAAO,EAAtB;;AACA,YAAIW,MAAM,IAAI,IAAd,EAAoB;AAChB,gBAAMA,MAAN;AACH;AACJ;AACJ,KAPD,CAQA,OAAOC,CAAP,EAAU;AACNC,MAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACH;AACJ,GAZkB;;AAAA,kBAAbH,aAAa;AAAA;AAAA;AAAA,GAAnB;;AAcA,SAASrB,uBAAT","sourcesContent":["const startHardwareBackButton = () => {\r\n    const doc = document;\r\n    let busy = false;\r\n    doc.addEventListener('backbutton', () => {\r\n        if (busy) {\r\n            return;\r\n        }\r\n        const handlers = [];\r\n        const ev = new CustomEvent('ionBackButton', {\r\n            bubbles: false,\r\n            detail: {\r\n                register(priority, handler) {\r\n                    handlers.push({ priority, handler });\r\n                }\r\n            }\r\n        });\r\n        doc.dispatchEvent(ev);\r\n        if (handlers.length > 0) {\r\n            let selectedPriority = Number.MIN_SAFE_INTEGER;\r\n            let selectedHandler;\r\n            handlers.forEach(({ priority, handler }) => {\r\n                if (priority >= selectedPriority) {\r\n                    selectedPriority = priority;\r\n                    selectedHandler = handler;\r\n                }\r\n            });\r\n            busy = true;\r\n            executeAction(selectedHandler).then(() => busy = false);\r\n        }\r\n    });\r\n};\r\nconst executeAction = async (handler) => {\r\n    try {\r\n        if (handler) {\r\n            const result = handler();\r\n            if (result != null) {\r\n                await result;\r\n            }\r\n        }\r\n    }\r\n    catch (e) {\r\n        console.error(e);\r\n    }\r\n};\n\nexport { startHardwareBackButton };\n"]},"metadata":{},"sourceType":"module"}
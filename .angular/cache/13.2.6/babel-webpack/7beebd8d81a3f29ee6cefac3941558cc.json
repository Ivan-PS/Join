{"ast":null,"code":"import _asyncToGenerator from \"/home/ivan/HACKUPC2022/Join/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { r as registerInstance, h, c as getIonMode, H as Host, d as createEvent, e as getElement } from './core-feeeff0d.js';\nimport './config-3c7f3790.js';\nimport { a as hapticSelectionStart, b as hapticSelectionChanged, c as hapticSelectionEnd } from './haptic-c8f1473e.js';\nconst Reorder = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n  }\n\n  onClick(ev) {\n    ev.preventDefault();\n    ev.stopImmediatePropagation();\n  }\n\n  render() {\n    return h(Host, {\n      class: getIonMode(this)\n    }, h(\"slot\", null, h(\"ion-icon\", {\n      name: \"reorder\",\n      lazy: false,\n      class: \"reorder-icon\"\n    })));\n  }\n\n  static get style() {\n    return \":host([slot]){display:none;line-height:0;z-index:100}.reorder-icon{display:block;font-size:22px;font-size:34px;opacity:.4}\";\n  }\n\n};\nconst ReorderGroup = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.lastToIndex = -1;\n    this.cachedHeights = [];\n    this.scrollElTop = 0;\n    this.scrollElBottom = 0;\n    this.scrollElInitial = 0;\n    this.containerTop = 0;\n    this.containerBottom = 0;\n    this.state = 0\n    /* Idle */\n    ;\n    /**\n     * If `true`, the reorder will be hidden.\n     */\n\n    this.disabled = true;\n    this.ionItemReorder = createEvent(this, \"ionItemReorder\", 7);\n  }\n\n  disabledChanged() {\n    if (this.gesture) {\n      this.gesture.setDisabled(this.disabled);\n    }\n  }\n\n  connectedCallback() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const contentEl = _this.el.closest('ion-content');\n\n      if (contentEl) {\n        _this.scrollEl = yield contentEl.getScrollElement();\n      }\n\n      _this.gesture = (yield import('./index-624eea58.js')).createGesture({\n        el: _this.el,\n        gestureName: 'reorder',\n        gesturePriority: 110,\n        threshold: 0,\n        direction: 'y',\n        passive: false,\n        canStart: detail => _this.canStart(detail),\n        onStart: ev => _this.onStart(ev),\n        onMove: ev => _this.onMove(ev),\n        onEnd: () => _this.onEnd()\n      });\n\n      _this.disabledChanged();\n    })();\n  }\n\n  disconnectedCallback() {\n    this.onEnd();\n\n    if (this.gesture) {\n      this.gesture.destroy();\n      this.gesture = undefined;\n    }\n  }\n  /**\n   * Completes the reorder operation. Must be called by the `ionItemReorder` event.\n   *\n   * If a list of items is passed, the list will be reordered and returned in the\n   * proper order.\n   *\n   * If no parameters are passed or if `true` is passed in, the reorder will complete\n   * and the item will remain in the position it was dragged to. If `false` is passed,\n   * the reorder will complete and the item will bounce back to its original position.\n   *\n   * @param listOrReorder A list of items to be sorted and returned in the new order or a\n   * boolean of whether or not the reorder should reposition the item.\n   */\n\n\n  complete(listOrReorder) {\n    return Promise.resolve(this.completeSync(listOrReorder));\n  }\n\n  canStart(ev) {\n    if (this.selectedItemEl || this.state !== 0\n    /* Idle */\n    ) {\n      return false;\n    }\n\n    const target = ev.event.target;\n    const reorderEl = target.closest('ion-reorder');\n\n    if (!reorderEl) {\n      return false;\n    }\n\n    const item = findReorderItem(reorderEl, this.el);\n\n    if (!item) {\n      return false;\n    }\n\n    ev.data = item;\n    return true;\n  }\n\n  onStart(ev) {\n    ev.event.preventDefault();\n    const item = this.selectedItemEl = ev.data;\n    const heights = this.cachedHeights;\n    heights.length = 0;\n    const el = this.el;\n    const children = el.children;\n\n    if (!children || children.length === 0) {\n      return;\n    }\n\n    let sum = 0;\n\n    for (let i = 0; i < children.length; i++) {\n      const child = children[i];\n      sum += child.offsetHeight;\n      heights.push(sum);\n      child.$ionIndex = i;\n    }\n\n    const box = el.getBoundingClientRect();\n    this.containerTop = box.top;\n    this.containerBottom = box.bottom;\n\n    if (this.scrollEl) {\n      const scrollBox = this.scrollEl.getBoundingClientRect();\n      this.scrollElInitial = this.scrollEl.scrollTop;\n      this.scrollElTop = scrollBox.top + AUTO_SCROLL_MARGIN;\n      this.scrollElBottom = scrollBox.bottom - AUTO_SCROLL_MARGIN;\n    } else {\n      this.scrollElInitial = 0;\n      this.scrollElTop = 0;\n      this.scrollElBottom = 0;\n    }\n\n    this.lastToIndex = indexForItem(item);\n    this.selectedItemHeight = item.offsetHeight;\n    this.state = 1\n    /* Active */\n    ;\n    item.classList.add(ITEM_REORDER_SELECTED);\n    hapticSelectionStart();\n  }\n\n  onMove(ev) {\n    const selectedItem = this.selectedItemEl;\n\n    if (!selectedItem) {\n      return;\n    } // Scroll if we reach the scroll margins\n\n\n    const scroll = this.autoscroll(ev.currentY); // // Get coordinate\n\n    const top = this.containerTop - scroll;\n    const bottom = this.containerBottom - scroll;\n    const currentY = Math.max(top, Math.min(ev.currentY, bottom));\n    const deltaY = scroll + currentY - ev.startY;\n    const normalizedY = currentY - top;\n    const toIndex = this.itemIndexForTop(normalizedY);\n\n    if (toIndex !== this.lastToIndex) {\n      const fromIndex = indexForItem(selectedItem);\n      this.lastToIndex = toIndex;\n      hapticSelectionChanged();\n      this.reorderMove(fromIndex, toIndex);\n    } // Update selected item position\n\n\n    selectedItem.style.transform = `translateY(${deltaY}px)`;\n  }\n\n  onEnd() {\n    const selectedItemEl = this.selectedItemEl;\n    this.state = 2\n    /* Complete */\n    ;\n\n    if (!selectedItemEl) {\n      this.state = 0\n      /* Idle */\n      ;\n      return;\n    }\n\n    const toIndex = this.lastToIndex;\n    const fromIndex = indexForItem(selectedItemEl);\n\n    if (toIndex === fromIndex) {\n      this.completeSync();\n    } else {\n      this.ionItemReorder.emit({\n        from: fromIndex,\n        to: toIndex,\n        complete: this.completeSync.bind(this)\n      });\n    }\n\n    hapticSelectionEnd();\n  }\n\n  completeSync(listOrReorder) {\n    const selectedItemEl = this.selectedItemEl;\n\n    if (selectedItemEl && this.state === 2\n    /* Complete */\n    ) {\n      const children = this.el.children;\n      const len = children.length;\n      const toIndex = this.lastToIndex;\n      const fromIndex = indexForItem(selectedItemEl);\n\n      if (toIndex !== fromIndex && (!listOrReorder || listOrReorder === true)) {\n        const ref = fromIndex < toIndex ? children[toIndex + 1] : children[toIndex];\n        this.el.insertBefore(selectedItemEl, ref);\n      }\n\n      if (Array.isArray(listOrReorder)) {\n        listOrReorder = reorderArray(listOrReorder, fromIndex, toIndex);\n      }\n\n      for (let i = 0; i < len; i++) {\n        children[i].style['transform'] = '';\n      }\n\n      selectedItemEl.style.transition = '';\n      selectedItemEl.classList.remove(ITEM_REORDER_SELECTED);\n      this.selectedItemEl = undefined;\n      this.state = 0\n      /* Idle */\n      ;\n    }\n\n    return listOrReorder;\n  }\n\n  itemIndexForTop(deltaY) {\n    const heights = this.cachedHeights;\n    let i = 0; // TODO: since heights is a sorted array of integers, we can do\n    // speed up the search using binary search. Remember that linear-search is still\n    // faster than binary-search for small arrays (<64) due CPU branch misprediction.\n\n    for (i = 0; i < heights.length; i++) {\n      if (heights[i] > deltaY) {\n        break;\n      }\n    }\n\n    return i;\n  }\n  /********* DOM WRITE ********* */\n\n\n  reorderMove(fromIndex, toIndex) {\n    const itemHeight = this.selectedItemHeight;\n    const children = this.el.children;\n\n    for (let i = 0; i < children.length; i++) {\n      const style = children[i].style;\n      let value = '';\n\n      if (i > fromIndex && i <= toIndex) {\n        value = `translateY(${-itemHeight}px)`;\n      } else if (i < fromIndex && i >= toIndex) {\n        value = `translateY(${itemHeight}px)`;\n      }\n\n      style['transform'] = value;\n    }\n  }\n\n  autoscroll(posY) {\n    if (!this.scrollEl) {\n      return 0;\n    }\n\n    let amount = 0;\n\n    if (posY < this.scrollElTop) {\n      amount = -SCROLL_JUMP;\n    } else if (posY > this.scrollElBottom) {\n      amount = SCROLL_JUMP;\n    }\n\n    if (amount !== 0) {\n      this.scrollEl.scrollBy(0, amount);\n    }\n\n    return this.scrollEl.scrollTop - this.scrollElInitial;\n  }\n\n  render() {\n    const mode = getIonMode(this);\n    return h(Host, {\n      class: {\n        [mode]: true,\n        'reorder-enabled': !this.disabled,\n        'reorder-list-active': this.state !== 0\n        /* Idle */\n\n      }\n    });\n  }\n\n  get el() {\n    return getElement(this);\n  }\n\n  static get watchers() {\n    return {\n      \"disabled\": [\"disabledChanged\"]\n    };\n  }\n\n  static get style() {\n    return \".reorder-list-active>*{-webkit-transition:-webkit-transform .3s;transition:-webkit-transform .3s;transition:transform .3s;transition:transform .3s,-webkit-transform .3s;will-change:transform}.reorder-enabled{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.reorder-enabled ion-reorder{display:block;cursor:-webkit-grab;cursor:grab;pointer-events:all;-ms-touch-action:none;touch-action:none}.reorder-selected,.reorder-selected ion-reorder{cursor:-webkit-grabbing;cursor:grabbing}.reorder-selected{position:relative;-webkit-transition:none!important;transition:none!important;-webkit-box-shadow:0 0 10px rgba(0,0,0,.4);box-shadow:0 0 10px rgba(0,0,0,.4);opacity:.8;z-index:100}.reorder-visible ion-reorder .reorder-icon{-webkit-transform:translateZ(0);transform:translateZ(0)}\";\n  }\n\n};\n\nconst indexForItem = element => {\n  return element['$ionIndex'];\n};\n\nconst findReorderItem = (node, container) => {\n  let parent;\n\n  while (node) {\n    parent = node.parentElement;\n\n    if (parent === container) {\n      return node;\n    }\n\n    node = parent;\n  }\n\n  return undefined;\n};\n\nconst AUTO_SCROLL_MARGIN = 60;\nconst SCROLL_JUMP = 10;\nconst ITEM_REORDER_SELECTED = 'reorder-selected';\n\nconst reorderArray = (array, from, to) => {\n  const element = array[from];\n  array.splice(from, 1);\n  array.splice(to, 0, element);\n  return array.slice();\n};\n\nexport { Reorder as ion_reorder, ReorderGroup as ion_reorder_group };","map":{"version":3,"sources":["/home/ivan/HACKUPC2022/Join/node_modules/ionic-mqtt/node_modules/@ionic/core/dist/esm/ion-reorder_2-ios.entry.js"],"names":["r","registerInstance","h","c","getIonMode","H","Host","d","createEvent","e","getElement","a","hapticSelectionStart","b","hapticSelectionChanged","hapticSelectionEnd","Reorder","constructor","hostRef","onClick","ev","preventDefault","stopImmediatePropagation","render","class","name","lazy","style","ReorderGroup","lastToIndex","cachedHeights","scrollElTop","scrollElBottom","scrollElInitial","containerTop","containerBottom","state","disabled","ionItemReorder","disabledChanged","gesture","setDisabled","connectedCallback","contentEl","el","closest","scrollEl","getScrollElement","createGesture","gestureName","gesturePriority","threshold","direction","passive","canStart","detail","onStart","onMove","onEnd","disconnectedCallback","destroy","undefined","complete","listOrReorder","Promise","resolve","completeSync","selectedItemEl","target","event","reorderEl","item","findReorderItem","data","heights","length","children","sum","i","child","offsetHeight","push","$ionIndex","box","getBoundingClientRect","top","bottom","scrollBox","scrollTop","AUTO_SCROLL_MARGIN","indexForItem","selectedItemHeight","classList","add","ITEM_REORDER_SELECTED","selectedItem","scroll","autoscroll","currentY","Math","max","min","deltaY","startY","normalizedY","toIndex","itemIndexForTop","fromIndex","reorderMove","transform","emit","from","to","bind","len","ref","insertBefore","Array","isArray","reorderArray","transition","remove","itemHeight","value","posY","amount","SCROLL_JUMP","scrollBy","mode","watchers","element","node","container","parent","parentElement","array","splice","slice","ion_reorder","ion_reorder_group"],"mappings":"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","sourcesContent":["import { r as registerInstance, h, c as getIonMode, H as Host, d as createEvent, e as getElement } from './core-feeeff0d.js';\nimport './config-3c7f3790.js';\nimport { a as hapticSelectionStart, b as hapticSelectionChanged, c as hapticSelectionEnd } from './haptic-c8f1473e.js';\n\nconst Reorder = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n    }\n    onClick(ev) {\n        ev.preventDefault();\n        ev.stopImmediatePropagation();\n    }\n    render() {\n        return (h(Host, { class: getIonMode(this) }, h(\"slot\", null, h(\"ion-icon\", { name: \"reorder\", lazy: false, class: \"reorder-icon\" }))));\n    }\n    static get style() { return \":host([slot]){display:none;line-height:0;z-index:100}.reorder-icon{display:block;font-size:22px;font-size:34px;opacity:.4}\"; }\n};\n\nconst ReorderGroup = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.lastToIndex = -1;\n        this.cachedHeights = [];\n        this.scrollElTop = 0;\n        this.scrollElBottom = 0;\n        this.scrollElInitial = 0;\n        this.containerTop = 0;\n        this.containerBottom = 0;\n        this.state = 0 /* Idle */;\n        /**\n         * If `true`, the reorder will be hidden.\n         */\n        this.disabled = true;\n        this.ionItemReorder = createEvent(this, \"ionItemReorder\", 7);\n    }\n    disabledChanged() {\n        if (this.gesture) {\n            this.gesture.setDisabled(this.disabled);\n        }\n    }\n    async connectedCallback() {\n        const contentEl = this.el.closest('ion-content');\n        if (contentEl) {\n            this.scrollEl = await contentEl.getScrollElement();\n        }\n        this.gesture = (await import('./index-624eea58.js')).createGesture({\n            el: this.el,\n            gestureName: 'reorder',\n            gesturePriority: 110,\n            threshold: 0,\n            direction: 'y',\n            passive: false,\n            canStart: detail => this.canStart(detail),\n            onStart: ev => this.onStart(ev),\n            onMove: ev => this.onMove(ev),\n            onEnd: () => this.onEnd(),\n        });\n        this.disabledChanged();\n    }\n    disconnectedCallback() {\n        this.onEnd();\n        if (this.gesture) {\n            this.gesture.destroy();\n            this.gesture = undefined;\n        }\n    }\n    /**\n     * Completes the reorder operation. Must be called by the `ionItemReorder` event.\n     *\n     * If a list of items is passed, the list will be reordered and returned in the\n     * proper order.\n     *\n     * If no parameters are passed or if `true` is passed in, the reorder will complete\n     * and the item will remain in the position it was dragged to. If `false` is passed,\n     * the reorder will complete and the item will bounce back to its original position.\n     *\n     * @param listOrReorder A list of items to be sorted and returned in the new order or a\n     * boolean of whether or not the reorder should reposition the item.\n     */\n    complete(listOrReorder) {\n        return Promise.resolve(this.completeSync(listOrReorder));\n    }\n    canStart(ev) {\n        if (this.selectedItemEl || this.state !== 0 /* Idle */) {\n            return false;\n        }\n        const target = ev.event.target;\n        const reorderEl = target.closest('ion-reorder');\n        if (!reorderEl) {\n            return false;\n        }\n        const item = findReorderItem(reorderEl, this.el);\n        if (!item) {\n            return false;\n        }\n        ev.data = item;\n        return true;\n    }\n    onStart(ev) {\n        ev.event.preventDefault();\n        const item = this.selectedItemEl = ev.data;\n        const heights = this.cachedHeights;\n        heights.length = 0;\n        const el = this.el;\n        const children = el.children;\n        if (!children || children.length === 0) {\n            return;\n        }\n        let sum = 0;\n        for (let i = 0; i < children.length; i++) {\n            const child = children[i];\n            sum += child.offsetHeight;\n            heights.push(sum);\n            child.$ionIndex = i;\n        }\n        const box = el.getBoundingClientRect();\n        this.containerTop = box.top;\n        this.containerBottom = box.bottom;\n        if (this.scrollEl) {\n            const scrollBox = this.scrollEl.getBoundingClientRect();\n            this.scrollElInitial = this.scrollEl.scrollTop;\n            this.scrollElTop = scrollBox.top + AUTO_SCROLL_MARGIN;\n            this.scrollElBottom = scrollBox.bottom - AUTO_SCROLL_MARGIN;\n        }\n        else {\n            this.scrollElInitial = 0;\n            this.scrollElTop = 0;\n            this.scrollElBottom = 0;\n        }\n        this.lastToIndex = indexForItem(item);\n        this.selectedItemHeight = item.offsetHeight;\n        this.state = 1 /* Active */;\n        item.classList.add(ITEM_REORDER_SELECTED);\n        hapticSelectionStart();\n    }\n    onMove(ev) {\n        const selectedItem = this.selectedItemEl;\n        if (!selectedItem) {\n            return;\n        }\n        // Scroll if we reach the scroll margins\n        const scroll = this.autoscroll(ev.currentY);\n        // // Get coordinate\n        const top = this.containerTop - scroll;\n        const bottom = this.containerBottom - scroll;\n        const currentY = Math.max(top, Math.min(ev.currentY, bottom));\n        const deltaY = scroll + currentY - ev.startY;\n        const normalizedY = currentY - top;\n        const toIndex = this.itemIndexForTop(normalizedY);\n        if (toIndex !== this.lastToIndex) {\n            const fromIndex = indexForItem(selectedItem);\n            this.lastToIndex = toIndex;\n            hapticSelectionChanged();\n            this.reorderMove(fromIndex, toIndex);\n        }\n        // Update selected item position\n        selectedItem.style.transform = `translateY(${deltaY}px)`;\n    }\n    onEnd() {\n        const selectedItemEl = this.selectedItemEl;\n        this.state = 2 /* Complete */;\n        if (!selectedItemEl) {\n            this.state = 0 /* Idle */;\n            return;\n        }\n        const toIndex = this.lastToIndex;\n        const fromIndex = indexForItem(selectedItemEl);\n        if (toIndex === fromIndex) {\n            this.completeSync();\n        }\n        else {\n            this.ionItemReorder.emit({\n                from: fromIndex,\n                to: toIndex,\n                complete: this.completeSync.bind(this)\n            });\n        }\n        hapticSelectionEnd();\n    }\n    completeSync(listOrReorder) {\n        const selectedItemEl = this.selectedItemEl;\n        if (selectedItemEl && this.state === 2 /* Complete */) {\n            const children = this.el.children;\n            const len = children.length;\n            const toIndex = this.lastToIndex;\n            const fromIndex = indexForItem(selectedItemEl);\n            if (toIndex !== fromIndex && (!listOrReorder || listOrReorder === true)) {\n                const ref = (fromIndex < toIndex)\n                    ? children[toIndex + 1]\n                    : children[toIndex];\n                this.el.insertBefore(selectedItemEl, ref);\n            }\n            if (Array.isArray(listOrReorder)) {\n                listOrReorder = reorderArray(listOrReorder, fromIndex, toIndex);\n            }\n            for (let i = 0; i < len; i++) {\n                children[i].style['transform'] = '';\n            }\n            selectedItemEl.style.transition = '';\n            selectedItemEl.classList.remove(ITEM_REORDER_SELECTED);\n            this.selectedItemEl = undefined;\n            this.state = 0 /* Idle */;\n        }\n        return listOrReorder;\n    }\n    itemIndexForTop(deltaY) {\n        const heights = this.cachedHeights;\n        let i = 0;\n        // TODO: since heights is a sorted array of integers, we can do\n        // speed up the search using binary search. Remember that linear-search is still\n        // faster than binary-search for small arrays (<64) due CPU branch misprediction.\n        for (i = 0; i < heights.length; i++) {\n            if (heights[i] > deltaY) {\n                break;\n            }\n        }\n        return i;\n    }\n    /********* DOM WRITE ********* */\n    reorderMove(fromIndex, toIndex) {\n        const itemHeight = this.selectedItemHeight;\n        const children = this.el.children;\n        for (let i = 0; i < children.length; i++) {\n            const style = children[i].style;\n            let value = '';\n            if (i > fromIndex && i <= toIndex) {\n                value = `translateY(${-itemHeight}px)`;\n            }\n            else if (i < fromIndex && i >= toIndex) {\n                value = `translateY(${itemHeight}px)`;\n            }\n            style['transform'] = value;\n        }\n    }\n    autoscroll(posY) {\n        if (!this.scrollEl) {\n            return 0;\n        }\n        let amount = 0;\n        if (posY < this.scrollElTop) {\n            amount = -SCROLL_JUMP;\n        }\n        else if (posY > this.scrollElBottom) {\n            amount = SCROLL_JUMP;\n        }\n        if (amount !== 0) {\n            this.scrollEl.scrollBy(0, amount);\n        }\n        return this.scrollEl.scrollTop - this.scrollElInitial;\n    }\n    render() {\n        const mode = getIonMode(this);\n        return (h(Host, { class: {\n                [mode]: true,\n                'reorder-enabled': !this.disabled,\n                'reorder-list-active': this.state !== 0 /* Idle */,\n            } }));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"disabled\": [\"disabledChanged\"]\n    }; }\n    static get style() { return \".reorder-list-active>*{-webkit-transition:-webkit-transform .3s;transition:-webkit-transform .3s;transition:transform .3s;transition:transform .3s,-webkit-transform .3s;will-change:transform}.reorder-enabled{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.reorder-enabled ion-reorder{display:block;cursor:-webkit-grab;cursor:grab;pointer-events:all;-ms-touch-action:none;touch-action:none}.reorder-selected,.reorder-selected ion-reorder{cursor:-webkit-grabbing;cursor:grabbing}.reorder-selected{position:relative;-webkit-transition:none!important;transition:none!important;-webkit-box-shadow:0 0 10px rgba(0,0,0,.4);box-shadow:0 0 10px rgba(0,0,0,.4);opacity:.8;z-index:100}.reorder-visible ion-reorder .reorder-icon{-webkit-transform:translateZ(0);transform:translateZ(0)}\"; }\n};\nconst indexForItem = (element) => {\n    return element['$ionIndex'];\n};\nconst findReorderItem = (node, container) => {\n    let parent;\n    while (node) {\n        parent = node.parentElement;\n        if (parent === container) {\n            return node;\n        }\n        node = parent;\n    }\n    return undefined;\n};\nconst AUTO_SCROLL_MARGIN = 60;\nconst SCROLL_JUMP = 10;\nconst ITEM_REORDER_SELECTED = 'reorder-selected';\nconst reorderArray = (array, from, to) => {\n    const element = array[from];\n    array.splice(from, 1);\n    array.splice(to, 0, element);\n    return array.slice();\n};\n\nexport { Reorder as ion_reorder, ReorderGroup as ion_reorder_group };\n"]},"metadata":{},"sourceType":"module"}
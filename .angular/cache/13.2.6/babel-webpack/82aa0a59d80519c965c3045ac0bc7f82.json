{"ast":null,"code":"import _asyncToGenerator from \"/home/ivan/HACKUPC2022/Join/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { r as registerInstance, d as createEvent, c as getIonMode, h, H as Host, e as getElement } from './core-feeeff0d.js';\nimport './config-3c7f3790.js';\nimport { f as findItemLabel, a as renderHiddenInput } from './helpers-46f4a262.js';\nimport { c as popoverController, b as actionSheetController, a as alertController, s as safeCall } from './overlays-10640d86.js';\nimport { h as hostContext } from './theme-18cbe2cc.js';\nimport { w as watchForOptions } from './watch-options-2af96011.js';\nconst Select = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.inputId = `ion-sel-${selectIds++}`;\n    this.didInit = false;\n    this.isExpanded = false;\n    /**\n     * If `true`, the user cannot interact with the select.\n     */\n\n    this.disabled = false;\n    /**\n     * The text to display on the cancel button.\n     */\n\n    this.cancelText = 'Cancel';\n    /**\n     * The text to display on the ok button.\n     */\n\n    this.okText = 'OK';\n    /**\n     * The name of the control, which is submitted with the form data.\n     */\n\n    this.name = this.inputId;\n    /**\n     * If `true`, the select can accept multiple values.\n     */\n\n    this.multiple = false;\n    /**\n     * The interface the select should use: `action-sheet`, `popover` or `alert`.\n     */\n\n    this.interface = 'alert';\n    /**\n     * Any additional options that the `alert`, `action-sheet` or `popover` interface\n     * can take. See the [AlertController API docs](../../alert/AlertController/#create), the\n     * [ActionSheetController API docs](../../action-sheet/ActionSheetController/#create) and the\n     * [PopoverController API docs](../../popover/PopoverController/#create) for the\n     * create options for each interface.\n     */\n\n    this.interfaceOptions = {};\n\n    this.onClick = ev => {\n      this.setFocus();\n      this.open(ev);\n    };\n\n    this.onFocus = () => {\n      this.ionFocus.emit();\n    };\n\n    this.onBlur = () => {\n      this.ionBlur.emit();\n    };\n\n    this.ionChange = createEvent(this, \"ionChange\", 7);\n    this.ionCancel = createEvent(this, \"ionCancel\", 7);\n    this.ionFocus = createEvent(this, \"ionFocus\", 7);\n    this.ionBlur = createEvent(this, \"ionBlur\", 7);\n    this.ionStyle = createEvent(this, \"ionStyle\", 7);\n  }\n\n  disabledChanged() {\n    this.emitStyle();\n  }\n\n  valueChanged() {\n    this.updateOptions();\n    this.emitStyle();\n\n    if (this.didInit) {\n      this.ionChange.emit({\n        value: this.value\n      });\n    }\n  }\n\n  connectedCallback() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this.value === undefined) {\n        if (_this.multiple) {\n          // there are no values set at this point\n          // so check to see who should be selected\n          const checked = _this.childOpts.filter(o => o.selected);\n\n          _this.value = checked.map(o => getOptionValue(o));\n        } else {\n          const checked = _this.childOpts.find(o => o.selected);\n\n          if (checked) {\n            _this.value = getOptionValue(checked);\n          }\n        }\n      }\n\n      _this.updateOptions();\n\n      _this.updateOverlayOptions();\n\n      _this.emitStyle();\n\n      _this.mutationO = watchForOptions(_this.el, 'ion-select-option', /*#__PURE__*/_asyncToGenerator(function* () {\n        _this.updateOptions();\n\n        _this.updateOverlayOptions();\n      }));\n    })();\n  }\n\n  disconnectedCallback() {\n    if (this.mutationO) {\n      this.mutationO.disconnect();\n      this.mutationO = undefined;\n    }\n  }\n\n  componentDidLoad() {\n    this.didInit = true;\n  }\n  /**\n   * Open the select overlay. The overlay is either an alert, action sheet, or popover,\n   * depending on the `interface` property on the `ion-select`.\n   *\n   * @param event The user interface event that called the open.\n   */\n\n\n  open(event) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this2.disabled || _this2.isExpanded) {\n        return undefined;\n      }\n\n      const overlay = _this2.overlay = yield _this2.createOverlay(event);\n      _this2.isExpanded = true;\n      overlay.onDidDismiss().then(() => {\n        _this2.overlay = undefined;\n        _this2.isExpanded = false;\n\n        _this2.setFocus();\n      });\n      yield overlay.present();\n      return overlay;\n    })();\n  }\n\n  createOverlay(ev) {\n    let selectInterface = this.interface;\n\n    if ((selectInterface === 'action-sheet' || selectInterface === 'popover') && this.multiple) {\n      console.warn(`Select interface cannot be \"${selectInterface}\" with a multi-value select. Using the \"alert\" interface instead.`);\n      selectInterface = 'alert';\n    }\n\n    if (selectInterface === 'popover' && !ev) {\n      console.warn('Select interface cannot be a \"popover\" without passing an event. Using the \"alert\" interface instead.');\n      selectInterface = 'alert';\n    }\n\n    if (selectInterface === 'popover') {\n      return this.openPopover(ev);\n    }\n\n    if (selectInterface === 'action-sheet') {\n      return this.openActionSheet();\n    }\n\n    return this.openAlert();\n  }\n\n  updateOverlayOptions() {\n    const overlay = this.overlay;\n\n    if (!overlay) {\n      return;\n    }\n\n    const childOpts = this.childOpts;\n\n    switch (this.interface) {\n      case 'action-sheet':\n        overlay.buttons = this.createActionSheetButtons(childOpts);\n        break;\n\n      case 'popover':\n        const popover = overlay.querySelector('ion-select-popover');\n\n        if (popover) {\n          popover.options = this.createPopoverOptions(childOpts);\n        }\n\n        break;\n\n      case 'alert':\n        const inputType = this.multiple ? 'checkbox' : 'radio';\n        overlay.inputs = this.createAlertInputs(childOpts, inputType);\n        break;\n    }\n  }\n\n  createActionSheetButtons(data) {\n    const actionSheetButtons = data.map(option => {\n      return {\n        role: option.selected ? 'selected' : '',\n        text: option.textContent,\n        handler: () => {\n          this.value = getOptionValue(option);\n        }\n      };\n    }); // Add \"cancel\" button\n\n    actionSheetButtons.push({\n      text: this.cancelText,\n      role: 'cancel',\n      handler: () => {\n        this.ionCancel.emit();\n      }\n    });\n    return actionSheetButtons;\n  }\n\n  createAlertInputs(data, inputType) {\n    return data.map(o => {\n      return {\n        type: inputType,\n        label: o.textContent,\n        value: getOptionValue(o),\n        checked: o.selected,\n        disabled: o.disabled\n      };\n    });\n  }\n\n  createPopoverOptions(data) {\n    return data.map(o => {\n      const value = getOptionValue(o);\n      return {\n        text: o.textContent,\n        value,\n        checked: o.selected,\n        disabled: o.disabled,\n        handler: () => {\n          this.value = value;\n          this.close();\n        }\n      };\n    });\n  }\n\n  openPopover(ev) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      const interfaceOptions = _this3.interfaceOptions;\n      const mode = getIonMode(_this3);\n      const popoverOpts = Object.assign(Object.assign({\n        mode\n      }, interfaceOptions), {\n        component: 'ion-select-popover',\n        cssClass: ['select-popover', interfaceOptions.cssClass],\n        event: ev,\n        componentProps: {\n          header: interfaceOptions.header,\n          subHeader: interfaceOptions.subHeader,\n          message: interfaceOptions.message,\n          value: _this3.value,\n          options: _this3.createPopoverOptions(_this3.childOpts)\n        }\n      });\n      return popoverController.create(popoverOpts);\n    })();\n  }\n\n  openActionSheet() {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      const mode = getIonMode(_this4);\n      const interfaceOptions = _this4.interfaceOptions;\n      const actionSheetOpts = Object.assign(Object.assign({\n        mode\n      }, interfaceOptions), {\n        buttons: _this4.createActionSheetButtons(_this4.childOpts),\n        cssClass: ['select-action-sheet', interfaceOptions.cssClass]\n      });\n      return actionSheetController.create(actionSheetOpts);\n    })();\n  }\n\n  openAlert() {\n    var _this5 = this;\n\n    return _asyncToGenerator(function* () {\n      const label = _this5.getLabel();\n\n      const labelText = label ? label.textContent : null;\n      const interfaceOptions = _this5.interfaceOptions;\n      const inputType = _this5.multiple ? 'checkbox' : 'radio';\n      const mode = getIonMode(_this5);\n      const alertOpts = Object.assign(Object.assign({\n        mode\n      }, interfaceOptions), {\n        header: interfaceOptions.header ? interfaceOptions.header : labelText,\n        inputs: _this5.createAlertInputs(_this5.childOpts, inputType),\n        buttons: [{\n          text: _this5.cancelText,\n          role: 'cancel',\n          handler: () => {\n            _this5.ionCancel.emit();\n          }\n        }, {\n          text: _this5.okText,\n          handler: selectedValues => {\n            _this5.value = selectedValues;\n          }\n        }],\n        cssClass: ['select-alert', interfaceOptions.cssClass, _this5.multiple ? 'multiple-select-alert' : 'single-select-alert']\n      });\n      return alertController.create(alertOpts);\n    })();\n  }\n  /**\n   * Close the select interface.\n   */\n\n\n  close() {\n    // TODO check !this.overlay || !this.isFocus()\n    if (!this.overlay) {\n      return Promise.resolve(false);\n    }\n\n    return this.overlay.dismiss();\n  }\n\n  updateOptions() {\n    // iterate all options, updating the selected prop\n    let canSelect = true;\n    const {\n      value,\n      childOpts,\n      compareWith,\n      multiple\n    } = this;\n\n    for (const selectOption of childOpts) {\n      const optValue = getOptionValue(selectOption);\n      const selected = canSelect && isOptionSelected(value, optValue, compareWith);\n      selectOption.selected = selected; // if current option is selected and select is single-option, we can't select\n      // any option more\n\n      if (selected && !multiple) {\n        canSelect = false;\n      }\n    }\n  }\n\n  getLabel() {\n    return findItemLabel(this.el);\n  }\n\n  hasValue() {\n    return this.getText() !== '';\n  }\n\n  get childOpts() {\n    return Array.from(this.el.querySelectorAll('ion-select-option'));\n  }\n\n  getText() {\n    const selectedText = this.selectedText;\n\n    if (selectedText != null && selectedText !== '') {\n      return selectedText;\n    }\n\n    return generateText(this.childOpts, this.value, this.compareWith);\n  }\n\n  setFocus() {\n    if (this.buttonEl) {\n      this.buttonEl.focus();\n    }\n  }\n\n  emitStyle() {\n    this.ionStyle.emit({\n      'interactive': true,\n      'select': true,\n      'has-placeholder': this.placeholder != null,\n      'has-value': this.hasValue(),\n      'interactive-disabled': this.disabled,\n      'select-disabled': this.disabled\n    });\n  }\n\n  render() {\n    const {\n      placeholder,\n      name,\n      disabled,\n      isExpanded,\n      value,\n      el\n    } = this;\n    const mode = getIonMode(this);\n    const labelId = this.inputId + '-lbl';\n    const label = findItemLabel(el);\n\n    if (label) {\n      label.id = labelId;\n    }\n\n    let addPlaceholderClass = false;\n    let selectText = this.getText();\n\n    if (selectText === '' && placeholder != null) {\n      selectText = placeholder;\n      addPlaceholderClass = true;\n    }\n\n    renderHiddenInput(true, el, name, parseValue(value), disabled);\n    const selectTextClasses = {\n      'select-text': true,\n      'select-placeholder': addPlaceholderClass\n    };\n    return h(Host, {\n      onClick: this.onClick,\n      role: \"combobox\",\n      \"aria-haspopup\": \"dialog\",\n      \"aria-disabled\": disabled ? 'true' : null,\n      \"aria-expanded\": `${isExpanded}`,\n      \"aria-labelledby\": labelId,\n      class: {\n        [mode]: true,\n        'in-item': hostContext('ion-item', el),\n        'select-disabled': disabled\n      }\n    }, h(\"div\", {\n      class: selectTextClasses\n    }, selectText), h(\"div\", {\n      class: \"select-icon\",\n      role: \"presentation\"\n    }, h(\"div\", {\n      class: \"select-icon-inner\"\n    })), h(\"button\", {\n      type: \"button\",\n      onFocus: this.onFocus,\n      onBlur: this.onBlur,\n      disabled: disabled,\n      ref: btnEl => this.buttonEl = btnEl\n    }));\n  }\n\n  get el() {\n    return getElement(this);\n  }\n\n  static get watchers() {\n    return {\n      \"disabled\": [\"disabledChanged\"],\n      \"placeholder\": [\"disabledChanged\"],\n      \"value\": [\"valueChanged\"]\n    };\n  }\n\n  static get style() {\n    return \":host{padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);display:-ms-flexbox;display:flex;position:relative;font-family:var(--ion-font-family,inherit);overflow:hidden;z-index:2}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){:host{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}:host(.in-item){position:static;max-width:45%}:host(.select-disabled){opacity:.4;pointer-events:none}:host(.ion-focused) button{border:2px solid #5e9ed6}.select-placeholder{color:currentColor;opacity:.33}button{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none}:host-context([dir=rtl]) button,[dir=rtl] button{left:unset;right:unset;right:0}button::-moz-focus-inner{border:0}.select-icon{position:relative}.select-text{-ms-flex:1;flex:1;min-width:16px;font-size:inherit;text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.select-icon-inner{left:5px;top:50%;margin-top:-3px;position:absolute;width:0;height:0;border-top:5px solid;border-right:5px solid transparent;border-left:5px solid transparent;color:currentColor;opacity:.33;pointer-events:none}:host-context([dir=rtl]) .select-icon-inner,[dir=rtl] .select-icon-inner{left:unset;right:unset;right:5px}:host{--padding-top:10px;--padding-end:8px;--padding-bottom:10px;--padding-start:16px}.select-icon{width:12px;height:18px}\";\n  }\n\n};\n\nconst getOptionValue = el => {\n  const value = el.value;\n  return value === undefined ? el.textContent || '' : value;\n};\n\nconst parseValue = value => {\n  if (value == null) {\n    return undefined;\n  }\n\n  if (Array.isArray(value)) {\n    return value.join(',');\n  }\n\n  return value.toString();\n};\n\nconst isOptionSelected = (currentValue, compareValue, compareWith) => {\n  if (currentValue === undefined) {\n    return false;\n  }\n\n  if (Array.isArray(currentValue)) {\n    return currentValue.some(val => compareOptions(val, compareValue, compareWith));\n  } else {\n    return compareOptions(currentValue, compareValue, compareWith);\n  }\n};\n\nconst compareOptions = (currentValue, compareValue, compareWith) => {\n  if (typeof compareWith === 'function') {\n    return compareWith(currentValue, compareValue);\n  } else if (typeof compareWith === 'string') {\n    return currentValue[compareWith] === compareValue[compareWith];\n  } else {\n    return currentValue === compareValue;\n  }\n};\n\nconst generateText = (opts, value, compareWith) => {\n  if (value === undefined) {\n    return '';\n  }\n\n  if (Array.isArray(value)) {\n    return value.map(v => textForValue(opts, v, compareWith)).filter(opt => opt !== null).join(', ');\n  } else {\n    return textForValue(opts, value, compareWith) || '';\n  }\n};\n\nconst textForValue = (opts, value, compareWith) => {\n  const selectOpt = opts.find(opt => {\n    return compareOptions(getOptionValue(opt), value, compareWith);\n  });\n  return selectOpt ? selectOpt.textContent : null;\n};\n\nlet selectIds = 0;\nconst SelectOption = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.inputId = `ion-selopt-${selectOptionIds++}`;\n    /**\n     * If `true`, the user cannot interact with the select option.\n     */\n\n    this.disabled = false;\n    /**\n     * If `true`, the element is selected.\n     */\n\n    this.selected = false;\n  }\n\n  render() {\n    return h(Host, {\n      role: \"option\",\n      id: this.inputId,\n      class: getIonMode(this)\n    });\n  }\n\n  get el() {\n    return getElement(this);\n  }\n\n  static get style() {\n    return \":host{display:none}\";\n  }\n\n};\nlet selectOptionIds = 0;\nconst SelectPopover = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    /** Array of options for the popover */\n\n    this.options = [];\n  }\n\n  onSelect(ev) {\n    const option = this.options.find(o => o.value === ev.target.value);\n\n    if (option) {\n      safeCall(option.handler);\n    }\n  }\n\n  render() {\n    return h(Host, {\n      class: getIonMode(this)\n    }, h(\"ion-list\", null, this.header !== undefined && h(\"ion-list-header\", null, this.header), (this.subHeader !== undefined || this.message !== undefined) && h(\"ion-item\", null, h(\"ion-label\", {\n      class: \"ion-text-wrap\"\n    }, this.subHeader !== undefined && h(\"h3\", null, this.subHeader), this.message !== undefined && h(\"p\", null, this.message))), h(\"ion-radio-group\", null, this.options.map(option => h(\"ion-item\", null, h(\"ion-label\", null, option.text), h(\"ion-radio\", {\n      checked: option.checked,\n      value: option.value,\n      disabled: option.disabled\n    }))))));\n  }\n\n  static get style() {\n    return \".sc-ion-select-popover-h ion-list.sc-ion-select-popover{margin-left:0;margin-right:0;margin-top:-1px;margin-bottom:-1px}.sc-ion-select-popover-h ion-label.sc-ion-select-popover, .sc-ion-select-popover-h ion-list-header.sc-ion-select-popover{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0}\";\n  }\n\n};\nexport { Select as ion_select, SelectOption as ion_select_option, SelectPopover as ion_select_popover };","map":{"version":3,"sources":["/home/ivan/HACKUPC2022/Join/node_modules/ionic-mqtt/node_modules/@ionic/core/dist/esm/ion-select_3-ios.entry.js"],"names":["r","registerInstance","d","createEvent","c","getIonMode","h","H","Host","e","getElement","f","findItemLabel","a","renderHiddenInput","popoverController","b","actionSheetController","alertController","s","safeCall","hostContext","w","watchForOptions","Select","constructor","hostRef","inputId","selectIds","didInit","isExpanded","disabled","cancelText","okText","name","multiple","interface","interfaceOptions","onClick","ev","setFocus","open","onFocus","ionFocus","emit","onBlur","ionBlur","ionChange","ionCancel","ionStyle","disabledChanged","emitStyle","valueChanged","updateOptions","value","connectedCallback","undefined","checked","childOpts","filter","o","selected","map","getOptionValue","find","updateOverlayOptions","mutationO","el","disconnectedCallback","disconnect","componentDidLoad","event","overlay","createOverlay","onDidDismiss","then","present","selectInterface","console","warn","openPopover","openActionSheet","openAlert","buttons","createActionSheetButtons","popover","querySelector","options","createPopoverOptions","inputType","inputs","createAlertInputs","data","actionSheetButtons","option","role","text","textContent","handler","push","type","label","close","mode","popoverOpts","Object","assign","component","cssClass","componentProps","header","subHeader","message","create","actionSheetOpts","getLabel","labelText","alertOpts","selectedValues","Promise","resolve","dismiss","canSelect","compareWith","selectOption","optValue","isOptionSelected","hasValue","getText","Array","from","querySelectorAll","selectedText","generateText","buttonEl","focus","placeholder","render","labelId","id","addPlaceholderClass","selectText","parseValue","selectTextClasses","class","ref","btnEl","watchers","style","isArray","join","toString","currentValue","compareValue","some","val","compareOptions","opts","v","textForValue","opt","selectOpt","SelectOption","selectOptionIds","SelectPopover","onSelect","target","ion_select","ion_select_option","ion_select_popover"],"mappings":"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","sourcesContent":["import { r as registerInstance, d as createEvent, c as getIonMode, h, H as Host, e as getElement } from './core-feeeff0d.js';\nimport './config-3c7f3790.js';\nimport { f as findItemLabel, a as renderHiddenInput } from './helpers-46f4a262.js';\nimport { c as popoverController, b as actionSheetController, a as alertController, s as safeCall } from './overlays-10640d86.js';\nimport { h as hostContext } from './theme-18cbe2cc.js';\nimport { w as watchForOptions } from './watch-options-2af96011.js';\n\nconst Select = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.inputId = `ion-sel-${selectIds++}`;\n        this.didInit = false;\n        this.isExpanded = false;\n        /**\n         * If `true`, the user cannot interact with the select.\n         */\n        this.disabled = false;\n        /**\n         * The text to display on the cancel button.\n         */\n        this.cancelText = 'Cancel';\n        /**\n         * The text to display on the ok button.\n         */\n        this.okText = 'OK';\n        /**\n         * The name of the control, which is submitted with the form data.\n         */\n        this.name = this.inputId;\n        /**\n         * If `true`, the select can accept multiple values.\n         */\n        this.multiple = false;\n        /**\n         * The interface the select should use: `action-sheet`, `popover` or `alert`.\n         */\n        this.interface = 'alert';\n        /**\n         * Any additional options that the `alert`, `action-sheet` or `popover` interface\n         * can take. See the [AlertController API docs](../../alert/AlertController/#create), the\n         * [ActionSheetController API docs](../../action-sheet/ActionSheetController/#create) and the\n         * [PopoverController API docs](../../popover/PopoverController/#create) for the\n         * create options for each interface.\n         */\n        this.interfaceOptions = {};\n        this.onClick = (ev) => {\n            this.setFocus();\n            this.open(ev);\n        };\n        this.onFocus = () => {\n            this.ionFocus.emit();\n        };\n        this.onBlur = () => {\n            this.ionBlur.emit();\n        };\n        this.ionChange = createEvent(this, \"ionChange\", 7);\n        this.ionCancel = createEvent(this, \"ionCancel\", 7);\n        this.ionFocus = createEvent(this, \"ionFocus\", 7);\n        this.ionBlur = createEvent(this, \"ionBlur\", 7);\n        this.ionStyle = createEvent(this, \"ionStyle\", 7);\n    }\n    disabledChanged() {\n        this.emitStyle();\n    }\n    valueChanged() {\n        this.updateOptions();\n        this.emitStyle();\n        if (this.didInit) {\n            this.ionChange.emit({\n                value: this.value,\n            });\n        }\n    }\n    async connectedCallback() {\n        if (this.value === undefined) {\n            if (this.multiple) {\n                // there are no values set at this point\n                // so check to see who should be selected\n                const checked = this.childOpts.filter(o => o.selected);\n                this.value = checked.map(o => getOptionValue(o));\n            }\n            else {\n                const checked = this.childOpts.find(o => o.selected);\n                if (checked) {\n                    this.value = getOptionValue(checked);\n                }\n            }\n        }\n        this.updateOptions();\n        this.updateOverlayOptions();\n        this.emitStyle();\n        this.mutationO = watchForOptions(this.el, 'ion-select-option', async () => {\n            this.updateOptions();\n            this.updateOverlayOptions();\n        });\n    }\n    disconnectedCallback() {\n        if (this.mutationO) {\n            this.mutationO.disconnect();\n            this.mutationO = undefined;\n        }\n    }\n    componentDidLoad() {\n        this.didInit = true;\n    }\n    /**\n     * Open the select overlay. The overlay is either an alert, action sheet, or popover,\n     * depending on the `interface` property on the `ion-select`.\n     *\n     * @param event The user interface event that called the open.\n     */\n    async open(event) {\n        if (this.disabled || this.isExpanded) {\n            return undefined;\n        }\n        const overlay = this.overlay = await this.createOverlay(event);\n        this.isExpanded = true;\n        overlay.onDidDismiss().then(() => {\n            this.overlay = undefined;\n            this.isExpanded = false;\n            this.setFocus();\n        });\n        await overlay.present();\n        return overlay;\n    }\n    createOverlay(ev) {\n        let selectInterface = this.interface;\n        if ((selectInterface === 'action-sheet' || selectInterface === 'popover') && this.multiple) {\n            console.warn(`Select interface cannot be \"${selectInterface}\" with a multi-value select. Using the \"alert\" interface instead.`);\n            selectInterface = 'alert';\n        }\n        if (selectInterface === 'popover' && !ev) {\n            console.warn('Select interface cannot be a \"popover\" without passing an event. Using the \"alert\" interface instead.');\n            selectInterface = 'alert';\n        }\n        if (selectInterface === 'popover') {\n            return this.openPopover(ev);\n        }\n        if (selectInterface === 'action-sheet') {\n            return this.openActionSheet();\n        }\n        return this.openAlert();\n    }\n    updateOverlayOptions() {\n        const overlay = this.overlay;\n        if (!overlay) {\n            return;\n        }\n        const childOpts = this.childOpts;\n        switch (this.interface) {\n            case 'action-sheet':\n                overlay.buttons = this.createActionSheetButtons(childOpts);\n                break;\n            case 'popover':\n                const popover = overlay.querySelector('ion-select-popover');\n                if (popover) {\n                    popover.options = this.createPopoverOptions(childOpts);\n                }\n                break;\n            case 'alert':\n                const inputType = (this.multiple ? 'checkbox' : 'radio');\n                overlay.inputs = this.createAlertInputs(childOpts, inputType);\n                break;\n        }\n    }\n    createActionSheetButtons(data) {\n        const actionSheetButtons = data.map(option => {\n            return {\n                role: (option.selected ? 'selected' : ''),\n                text: option.textContent,\n                handler: () => {\n                    this.value = getOptionValue(option);\n                }\n            };\n        });\n        // Add \"cancel\" button\n        actionSheetButtons.push({\n            text: this.cancelText,\n            role: 'cancel',\n            handler: () => {\n                this.ionCancel.emit();\n            }\n        });\n        return actionSheetButtons;\n    }\n    createAlertInputs(data, inputType) {\n        return data.map(o => {\n            return {\n                type: inputType,\n                label: o.textContent,\n                value: getOptionValue(o),\n                checked: o.selected,\n                disabled: o.disabled\n            };\n        });\n    }\n    createPopoverOptions(data) {\n        return data.map(o => {\n            const value = getOptionValue(o);\n            return {\n                text: o.textContent,\n                value,\n                checked: o.selected,\n                disabled: o.disabled,\n                handler: () => {\n                    this.value = value;\n                    this.close();\n                }\n            };\n        });\n    }\n    async openPopover(ev) {\n        const interfaceOptions = this.interfaceOptions;\n        const mode = getIonMode(this);\n        const popoverOpts = Object.assign(Object.assign({ mode }, interfaceOptions), { component: 'ion-select-popover', cssClass: ['select-popover', interfaceOptions.cssClass], event: ev, componentProps: {\n                header: interfaceOptions.header,\n                subHeader: interfaceOptions.subHeader,\n                message: interfaceOptions.message,\n                value: this.value,\n                options: this.createPopoverOptions(this.childOpts)\n            } });\n        return popoverController.create(popoverOpts);\n    }\n    async openActionSheet() {\n        const mode = getIonMode(this);\n        const interfaceOptions = this.interfaceOptions;\n        const actionSheetOpts = Object.assign(Object.assign({ mode }, interfaceOptions), { buttons: this.createActionSheetButtons(this.childOpts), cssClass: ['select-action-sheet', interfaceOptions.cssClass] });\n        return actionSheetController.create(actionSheetOpts);\n    }\n    async openAlert() {\n        const label = this.getLabel();\n        const labelText = (label) ? label.textContent : null;\n        const interfaceOptions = this.interfaceOptions;\n        const inputType = (this.multiple ? 'checkbox' : 'radio');\n        const mode = getIonMode(this);\n        const alertOpts = Object.assign(Object.assign({ mode }, interfaceOptions), { header: interfaceOptions.header ? interfaceOptions.header : labelText, inputs: this.createAlertInputs(this.childOpts, inputType), buttons: [\n                {\n                    text: this.cancelText,\n                    role: 'cancel',\n                    handler: () => {\n                        this.ionCancel.emit();\n                    }\n                },\n                {\n                    text: this.okText,\n                    handler: (selectedValues) => {\n                        this.value = selectedValues;\n                    }\n                }\n            ], cssClass: ['select-alert', interfaceOptions.cssClass,\n                (this.multiple ? 'multiple-select-alert' : 'single-select-alert')] });\n        return alertController.create(alertOpts);\n    }\n    /**\n     * Close the select interface.\n     */\n    close() {\n        // TODO check !this.overlay || !this.isFocus()\n        if (!this.overlay) {\n            return Promise.resolve(false);\n        }\n        return this.overlay.dismiss();\n    }\n    updateOptions() {\n        // iterate all options, updating the selected prop\n        let canSelect = true;\n        const { value, childOpts, compareWith, multiple } = this;\n        for (const selectOption of childOpts) {\n            const optValue = getOptionValue(selectOption);\n            const selected = canSelect && isOptionSelected(value, optValue, compareWith);\n            selectOption.selected = selected;\n            // if current option is selected and select is single-option, we can't select\n            // any option more\n            if (selected && !multiple) {\n                canSelect = false;\n            }\n        }\n    }\n    getLabel() {\n        return findItemLabel(this.el);\n    }\n    hasValue() {\n        return this.getText() !== '';\n    }\n    get childOpts() {\n        return Array.from(this.el.querySelectorAll('ion-select-option'));\n    }\n    getText() {\n        const selectedText = this.selectedText;\n        if (selectedText != null && selectedText !== '') {\n            return selectedText;\n        }\n        return generateText(this.childOpts, this.value, this.compareWith);\n    }\n    setFocus() {\n        if (this.buttonEl) {\n            this.buttonEl.focus();\n        }\n    }\n    emitStyle() {\n        this.ionStyle.emit({\n            'interactive': true,\n            'select': true,\n            'has-placeholder': this.placeholder != null,\n            'has-value': this.hasValue(),\n            'interactive-disabled': this.disabled,\n            'select-disabled': this.disabled\n        });\n    }\n    render() {\n        const { placeholder, name, disabled, isExpanded, value, el } = this;\n        const mode = getIonMode(this);\n        const labelId = this.inputId + '-lbl';\n        const label = findItemLabel(el);\n        if (label) {\n            label.id = labelId;\n        }\n        let addPlaceholderClass = false;\n        let selectText = this.getText();\n        if (selectText === '' && placeholder != null) {\n            selectText = placeholder;\n            addPlaceholderClass = true;\n        }\n        renderHiddenInput(true, el, name, parseValue(value), disabled);\n        const selectTextClasses = {\n            'select-text': true,\n            'select-placeholder': addPlaceholderClass\n        };\n        return (h(Host, { onClick: this.onClick, role: \"combobox\", \"aria-haspopup\": \"dialog\", \"aria-disabled\": disabled ? 'true' : null, \"aria-expanded\": `${isExpanded}`, \"aria-labelledby\": labelId, class: {\n                [mode]: true,\n                'in-item': hostContext('ion-item', el),\n                'select-disabled': disabled,\n            } }, h(\"div\", { class: selectTextClasses }, selectText), h(\"div\", { class: \"select-icon\", role: \"presentation\" }, h(\"div\", { class: \"select-icon-inner\" })), h(\"button\", { type: \"button\", onFocus: this.onFocus, onBlur: this.onBlur, disabled: disabled, ref: (btnEl => this.buttonEl = btnEl) })));\n    }\n    get el() { return getElement(this); }\n    static get watchers() { return {\n        \"disabled\": [\"disabledChanged\"],\n        \"placeholder\": [\"disabledChanged\"],\n        \"value\": [\"valueChanged\"]\n    }; }\n    static get style() { return \":host{padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);display:-ms-flexbox;display:flex;position:relative;font-family:var(--ion-font-family,inherit);overflow:hidden;z-index:2}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){:host{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}:host(.in-item){position:static;max-width:45%}:host(.select-disabled){opacity:.4;pointer-events:none}:host(.ion-focused) button{border:2px solid #5e9ed6}.select-placeholder{color:currentColor;opacity:.33}button{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none}:host-context([dir=rtl]) button,[dir=rtl] button{left:unset;right:unset;right:0}button::-moz-focus-inner{border:0}.select-icon{position:relative}.select-text{-ms-flex:1;flex:1;min-width:16px;font-size:inherit;text-overflow:ellipsis;white-space:nowrap;overflow:hidden}.select-icon-inner{left:5px;top:50%;margin-top:-3px;position:absolute;width:0;height:0;border-top:5px solid;border-right:5px solid transparent;border-left:5px solid transparent;color:currentColor;opacity:.33;pointer-events:none}:host-context([dir=rtl]) .select-icon-inner,[dir=rtl] .select-icon-inner{left:unset;right:unset;right:5px}:host{--padding-top:10px;--padding-end:8px;--padding-bottom:10px;--padding-start:16px}.select-icon{width:12px;height:18px}\"; }\n};\nconst getOptionValue = (el) => {\n    const value = el.value;\n    return (value === undefined)\n        ? el.textContent || ''\n        : value;\n};\nconst parseValue = (value) => {\n    if (value == null) {\n        return undefined;\n    }\n    if (Array.isArray(value)) {\n        return value.join(',');\n    }\n    return value.toString();\n};\nconst isOptionSelected = (currentValue, compareValue, compareWith) => {\n    if (currentValue === undefined) {\n        return false;\n    }\n    if (Array.isArray(currentValue)) {\n        return currentValue.some(val => compareOptions(val, compareValue, compareWith));\n    }\n    else {\n        return compareOptions(currentValue, compareValue, compareWith);\n    }\n};\nconst compareOptions = (currentValue, compareValue, compareWith) => {\n    if (typeof compareWith === 'function') {\n        return compareWith(currentValue, compareValue);\n    }\n    else if (typeof compareWith === 'string') {\n        return currentValue[compareWith] === compareValue[compareWith];\n    }\n    else {\n        return currentValue === compareValue;\n    }\n};\nconst generateText = (opts, value, compareWith) => {\n    if (value === undefined) {\n        return '';\n    }\n    if (Array.isArray(value)) {\n        return value\n            .map(v => textForValue(opts, v, compareWith))\n            .filter(opt => opt !== null)\n            .join(', ');\n    }\n    else {\n        return textForValue(opts, value, compareWith) || '';\n    }\n};\nconst textForValue = (opts, value, compareWith) => {\n    const selectOpt = opts.find(opt => {\n        return compareOptions(getOptionValue(opt), value, compareWith);\n    });\n    return selectOpt\n        ? selectOpt.textContent\n        : null;\n};\nlet selectIds = 0;\n\nconst SelectOption = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.inputId = `ion-selopt-${selectOptionIds++}`;\n        /**\n         * If `true`, the user cannot interact with the select option.\n         */\n        this.disabled = false;\n        /**\n         * If `true`, the element is selected.\n         */\n        this.selected = false;\n    }\n    render() {\n        return (h(Host, { role: \"option\", id: this.inputId, class: getIonMode(this) }));\n    }\n    get el() { return getElement(this); }\n    static get style() { return \":host{display:none}\"; }\n};\nlet selectOptionIds = 0;\n\nconst SelectPopover = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        /** Array of options for the popover */\n        this.options = [];\n    }\n    onSelect(ev) {\n        const option = this.options.find(o => o.value === ev.target.value);\n        if (option) {\n            safeCall(option.handler);\n        }\n    }\n    render() {\n        return (h(Host, { class: getIonMode(this) }, h(\"ion-list\", null, this.header !== undefined && h(\"ion-list-header\", null, this.header), (this.subHeader !== undefined || this.message !== undefined) &&\n            h(\"ion-item\", null, h(\"ion-label\", { class: \"ion-text-wrap\" }, this.subHeader !== undefined && h(\"h3\", null, this.subHeader), this.message !== undefined && h(\"p\", null, this.message))), h(\"ion-radio-group\", null, this.options.map(option => h(\"ion-item\", null, h(\"ion-label\", null, option.text), h(\"ion-radio\", { checked: option.checked, value: option.value, disabled: option.disabled })))))));\n    }\n    static get style() { return \".sc-ion-select-popover-h ion-list.sc-ion-select-popover{margin-left:0;margin-right:0;margin-top:-1px;margin-bottom:-1px}.sc-ion-select-popover-h ion-label.sc-ion-select-popover, .sc-ion-select-popover-h ion-list-header.sc-ion-select-popover{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0}\"; }\n};\n\nexport { Select as ion_select, SelectOption as ion_select_option, SelectPopover as ion_select_popover };\n"]},"metadata":{},"sourceType":"module"}